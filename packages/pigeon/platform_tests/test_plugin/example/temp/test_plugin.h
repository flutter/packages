// Generated by Apple Swift version 6.1.2 effective-5.10 (swiftlang-6.1.2.1.2
// clang-1700.0.13.5)
#ifndef TEST_PLUGIN_SWIFT_H
#define TEST_PLUGIN_SWIFT_H
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
#define __has_include(x) 0
#endif
#if !defined(__has_attribute)
#define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
#define __has_feature(x) 0
#endif
#if !defined(__has_warning)
#define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
#include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#if defined(__OBJC__)
#include <Foundation/Foundation.h>
#endif
#if defined(__cplusplus)
#include <stdlib.h>

#include <cstdbool>
#include <cstddef>
#include <cstdint>
#include <cstring>
#include <new>
#include <type_traits>
#else
#include <stdbool.h>
#include <stddef.h>
#include <stdint.h>
#include <string.h>
#endif
#if defined(__cplusplus)
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wnon-modular-include-in-framework-module"
#if defined(__arm64e__) && __has_include(<ptrauth.h>)
#include <ptrauth.h>
#else
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wreserved-macro-identifier"
#ifndef __ptrauth_swift_value_witness_function_pointer
#define __ptrauth_swift_value_witness_function_pointer(x)
#endif
#ifndef __ptrauth_swift_class_method_pointer
#define __ptrauth_swift_class_method_pointer(x)
#endif
#pragma clang diagnostic pop
#endif
#pragma clang diagnostic pop
#endif

#if !defined(SWIFT_TYPEDEFS)
#define SWIFT_TYPEDEFS 1
#if __has_include(<uchar.h>)
#include <uchar.h>
#elif !defined(__cplusplus)
typedef unsigned char char8_t;
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
#endif
typedef float swift_float2 __attribute__((__ext_vector_type__(2)));
typedef float swift_float3 __attribute__((__ext_vector_type__(3)));
typedef float swift_float4 __attribute__((__ext_vector_type__(4)));
typedef double swift_double2 __attribute__((__ext_vector_type__(2)));
typedef double swift_double3 __attribute__((__ext_vector_type__(3)));
typedef double swift_double4 __attribute__((__ext_vector_type__(4)));
typedef int swift_int2 __attribute__((__ext_vector_type__(2)));
typedef int swift_int3 __attribute__((__ext_vector_type__(3)));
typedef int swift_int4 __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2 __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3 __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4 __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
#define SWIFT_PASTE_HELPER(x, y) x##y
#define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
#define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
#if __has_feature(objc_class_property)
#define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
#else
#define SWIFT_CLASS_PROPERTY(...)
#endif
#endif
#if !defined(SWIFT_RUNTIME_NAME)
#if __has_attribute(objc_runtime_name)
#define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
#define SWIFT_RUNTIME_NAME(X)
#endif
#endif
#if !defined(SWIFT_COMPILE_NAME)
#if __has_attribute(swift_name)
#define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
#define SWIFT_COMPILE_NAME(X)
#endif
#endif
#if !defined(SWIFT_METHOD_FAMILY)
#if __has_attribute(objc_method_family)
#define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
#define SWIFT_METHOD_FAMILY(X)
#endif
#endif
#if !defined(SWIFT_NOESCAPE)
#if __has_attribute(noescape)
#define SWIFT_NOESCAPE __attribute__((noescape))
#else
#define SWIFT_NOESCAPE
#endif
#endif
#if !defined(SWIFT_RELEASES_ARGUMENT)
#if __has_attribute(ns_consumed)
#define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
#else
#define SWIFT_RELEASES_ARGUMENT
#endif
#endif
#if !defined(SWIFT_WARN_UNUSED_RESULT)
#if __has_attribute(warn_unused_result)
#define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
#else
#define SWIFT_WARN_UNUSED_RESULT
#endif
#endif
#if !defined(SWIFT_NORETURN)
#if __has_attribute(noreturn)
#define SWIFT_NORETURN __attribute__((noreturn))
#else
#define SWIFT_NORETURN
#endif
#endif
#if !defined(SWIFT_CLASS_EXTRA)
#define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
#define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
#define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
#if __has_attribute(objc_subclassing_restricted)
#define SWIFT_CLASS(SWIFT_NAME)  \
  SWIFT_RUNTIME_NAME(SWIFT_NAME) \
  __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#define SWIFT_CLASS_NAMED(SWIFT_NAME)                                         \
  __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) \
      SWIFT_CLASS_EXTRA
#else
#define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#define SWIFT_CLASS_NAMED(SWIFT_NAME) \
  SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
#if __has_attribute(objc_class_stub)
#define SWIFT_RESILIENT_CLASS(SWIFT_NAME) \
  SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) \
  __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
#else
#define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
#endif
#endif
#if !defined(SWIFT_PROTOCOL)
#define SWIFT_PROTOCOL(SWIFT_NAME) \
  SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) \
  SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_EXTENSION)
#define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif
#if !defined(OBJC_DESIGNATED_INITIALIZER)
#if __has_attribute(objc_designated_initializer)
#define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
#else
#define OBJC_DESIGNATED_INITIALIZER
#endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
#if __has_attribute(enum_extensibility)
#define SWIFT_ENUM_ATTR(_extensibility) \
  __attribute__((enum_extensibility(_extensibility)))
#else
#define SWIFT_ENUM_ATTR(_extensibility)
#endif
#endif
#if !defined(SWIFT_ENUM)
#define SWIFT_ENUM(_type, _name, _extensibility) \
  enum _name : _type _name;                      \
  enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
#if __has_feature(generalized_swift_name)
#define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility)    \
  enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME);            \
  enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) \
      SWIFT_ENUM_EXTRA _name : _type
#else
#define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) \
  SWIFT_ENUM(_type, _name, _extensibility)
#endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
#define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
#define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
#define SWIFT_AVAILABILITY(plat, ...) \
  __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
#define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
#define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
#define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if !defined(SWIFT_DEPRECATED_OBJC)
#if __has_feature(attribute_diagnose_if_objc)
#define SWIFT_DEPRECATED_OBJC(Msg) \
  __attribute__((diagnose_if(1, Msg, "warning")))
#else
#define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
#endif
#endif
#if defined(__OBJC__)
#if !defined(IBSegueAction)
#define IBSegueAction
#endif
#endif
#if !defined(SWIFT_EXTERN)
#if defined(__cplusplus)
#define SWIFT_EXTERN extern "C"
#else
#define SWIFT_EXTERN extern
#endif
#endif
#if !defined(SWIFT_CALL)
#define SWIFT_CALL __attribute__((swiftcall))
#endif
#if !defined(SWIFT_INDIRECT_RESULT)
#define SWIFT_INDIRECT_RESULT __attribute__((swift_indirect_result))
#endif
#if !defined(SWIFT_CONTEXT)
#define SWIFT_CONTEXT __attribute__((swift_context))
#endif
#if !defined(SWIFT_ERROR_RESULT)
#define SWIFT_ERROR_RESULT __attribute__((swift_error_result))
#endif
#if defined(__cplusplus)
#define SWIFT_NOEXCEPT noexcept
#else
#define SWIFT_NOEXCEPT
#endif
#if !defined(SWIFT_C_INLINE_THUNK)
#if __has_attribute(always_inline)
#if __has_attribute(nodebug)
#define SWIFT_C_INLINE_THUNK \
  inline __attribute__((always_inline)) __attribute__((nodebug))
#else
#define SWIFT_C_INLINE_THUNK inline __attribute__((always_inline))
#endif
#else
#define SWIFT_C_INLINE_THUNK inline
#endif
#endif
#if defined(_WIN32)
#if !defined(SWIFT_IMPORT_STDLIB_SYMBOL)
#define SWIFT_IMPORT_STDLIB_SYMBOL __declspec(dllimport)
#endif
#else
#if !defined(SWIFT_IMPORT_STDLIB_SYMBOL)
#define SWIFT_IMPORT_STDLIB_SYMBOL
#endif
#endif
#if defined(__OBJC__)
#if __has_feature(objc_modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import Foundation;
@import ObjectiveC;
#endif

#endif
#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
#pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"
#pragma clang diagnostic ignored "-Wdollar-in-identifier-extension"
#pragma clang diagnostic ignored "-Wunsafe-buffer-usage"

#if __has_attribute(external_source_symbol)
#pragma push_macro("any")
#undef any
#pragma clang attribute push(                                         \
    __attribute__((external_source_symbol(language = "Swift",         \
                                          defined_in = "test_plugin", \
                                          generated_declaration))),   \
    apply_to =                                                        \
        any(function, enum, objc_interface, objc_category, objc_protocol))
#pragma pop_macro("any")
#endif

#if defined(__OBJC__)

@class NIAllNullableTypesWithoutRecursionBridge;
@class NIAllTypesBridge;
/// A class for testing nested class handling.
/// This is needed to test nested nullable and non-nullable classes,
/// <code>NIAllNullableTypes</code> is non-nullable here as it is easier to
/// instantiate than <code>NIAllTypes</code> when testing doesn’t require both
/// (ie. testing null classes). Generated bridge class from Pigeon that moves
/// data from Swift to Objective-C.
SWIFT_CLASS("_TtC11test_plugin25NIAllClassesWrapperBridge")
SWIFT_AVAILABILITY(macos, introduced = 16.0.0)
SWIFT_AVAILABILITY(ios, introduced = 13)
@interface NIAllClassesWrapperBridge : NSObject
- (nonnull instancetype)
    initWithAllNullableTypesWithoutRecursion:
        (NIAllNullableTypesWithoutRecursionBridge *_Nullable)
            allNullableTypesWithoutRecursion
                                    allTypes:
                                        (NIAllTypesBridge *_Nullable)allTypes
    OBJC_DESIGNATED_INITIALIZER;
@property(nonatomic, strong) NIAllNullableTypesWithoutRecursionBridge
    *_Nullable allNullableTypesWithoutRecursion;
@property(nonatomic, strong) NIAllTypesBridge *_Nullable allTypes;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class NSNumber;
@class NSString;
/// A class containing all supported nullable types.
/// The primary purpose for this class is to ensure coverage of Swift structs
/// with nullable items, as the primary [NIAllNullableTypes] class is being used
/// to test Swift classes. Generated bridge class from Pigeon that moves data
/// from Swift to Objective-C.
SWIFT_CLASS("_TtC11test_plugin40NIAllNullableTypesWithoutRecursionBridge")
SWIFT_AVAILABILITY(macos, introduced = 16.0.0)
SWIFT_AVAILABILITY(ios, introduced = 13)
@interface NIAllNullableTypesWithoutRecursionBridge : NSObject
- (nonnull instancetype)
    initWithANullableBool:(NSNumber *_Nullable)aNullableBool
             aNullableInt:(NSNumber *_Nullable)aNullableInt
           aNullableInt64:(NSNumber *_Nullable)aNullableInt64
          aNullableDouble:(NSNumber *_Nullable)aNullableDouble
            aNullableEnum:(NSNumber *_Nullable)aNullableEnum
      anotherNullableEnum:(NSNumber *_Nullable)anotherNullableEnum
          aNullableString:(NSString *_Nullable)aNullableString
          aNullableObject:(NSObject *_Nullable)aNullableObject
                     list:(NSArray<NSObject *> *_Nullable)list
                      map:(NSDictionary<id<NSCopying>, NSObject *> *_Nullable)
                              map OBJC_DESIGNATED_INITIALIZER;
@property(nonatomic, strong) NSNumber *_Nullable aNullableBool;
@property(nonatomic, strong) NSNumber *_Nullable aNullableInt;
@property(nonatomic, strong) NSNumber *_Nullable aNullableInt64;
@property(nonatomic, strong) NSNumber *_Nullable aNullableDouble;
@property(nonatomic, strong) NSNumber *_Nullable aNullableEnum;
@property(nonatomic, strong) NSNumber *_Nullable anotherNullableEnum;
@property(nonatomic, strong) NSString *_Nullable aNullableString;
@property(nonatomic, strong) NSObject *_Nullable aNullableObject;
@property(nonatomic, copy) NSArray<NSObject *> *_Nullable list;
@property(nonatomic, copy)
    NSDictionary<id<NSCopying>, NSObject *> *_Nullable map;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

enum NIAnEnum : NSInteger;
enum NIAnotherEnum : NSInteger;
/// A class containing all supported types.
/// Generated bridge class from Pigeon that moves data from Swift to
/// Objective-C.
SWIFT_CLASS("_TtC11test_plugin16NIAllTypesBridge")
SWIFT_AVAILABILITY(macos, introduced = 16.0.0)
SWIFT_AVAILABILITY(ios, introduced = 13) @interface NIAllTypesBridge : NSObject
- (nonnull instancetype)
    initWithABool:(BOOL)aBool
            anInt:(int64_t)anInt
          anInt64:(int64_t)anInt64
          aDouble:(double)aDouble
           anEnum:(enum NIAnEnum)anEnum
      anotherEnum:(enum NIAnotherEnum)anotherEnum
          aString:(NSString *_Nonnull)aString
         anObject:(NSObject *_Nonnull)anObject
             list:(NSArray<NSObject *> *_Nonnull)list
       stringList:(NSArray<NSObject *> *_Nonnull)stringList
          intList:(NSArray<NSObject *> *_Nonnull)intList
       doubleList:(NSArray<NSObject *> *_Nonnull)doubleList
         boolList:(NSArray<NSObject *> *_Nonnull)boolList
              map:(NSDictionary<id<NSCopying>, NSObject *> *_Nonnull)map
        stringMap:(NSDictionary<id<NSCopying>, NSObject *> *_Nonnull)stringMap
    OBJC_DESIGNATED_INITIALIZER;
@property(nonatomic) BOOL aBool;
@property(nonatomic) int64_t anInt;
@property(nonatomic) int64_t anInt64;
@property(nonatomic) double aDouble;
@property(nonatomic) enum NIAnEnum anEnum;
@property(nonatomic) enum NIAnotherEnum anotherEnum;
@property(nonatomic, strong) NSString *_Nonnull aString;
@property(nonatomic, strong) NSObject *_Nonnull anObject;
@property(nonatomic, copy) NSArray<NSObject *> *_Nonnull list;
@property(nonatomic, copy) NSArray<NSObject *> *_Nonnull stringList;
@property(nonatomic, copy) NSArray<NSObject *> *_Nonnull intList;
@property(nonatomic, copy) NSArray<NSObject *> *_Nonnull doubleList;
@property(nonatomic, copy) NSArray<NSObject *> *_Nonnull boolList;
@property(nonatomic, copy)
    NSDictionary<id<NSCopying>, NSObject *> *_Nonnull map;
@property(nonatomic, copy)
    NSDictionary<id<NSCopying>, NSObject *> *_Nonnull stringMap;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, NIAnEnum, closed){
    NIAnEnumOne = 0,
    NIAnEnumTwo = 1,
    NIAnEnumThree = 2,
    NIAnEnumFortyTwo = 3,
    NIAnEnumFourHundredTwentyTwo = 4,
};

typedef SWIFT_ENUM(NSInteger, NIAnotherEnum, closed){
    NIAnotherEnumJustInCase = 0,
};

@class NiTestsError;
/// Generated setup class from Pigeon to register implemented
/// NIHostIntegrationCoreApi classes.
SWIFT_CLASS("_TtC11test_plugin29NIHostIntegrationCoreApiSetup")
@interface NIHostIntegrationCoreApiSetup : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
+ (NIHostIntegrationCoreApiSetup *_Nullable)getInstanceWithName:
    (NSString *_Nonnull)name SWIFT_WARN_UNUSED_RESULT;
/// A no-op function taking no arguments and returning no value, to sanity
/// test basic calling.
- (void)noopWithWrappedError:(NiTestsError *_Nonnull)wrappedError
    SWIFT_AVAILABILITY(macos, introduced = 16.0.0)
        SWIFT_AVAILABILITY(ios, introduced = 13);
/// Returns the passed object, to test serialization and deserialization.
- (NIAllTypesBridge *_Nullable)
    echoAllTypesWithEverything:(NIAllTypesBridge *_Nonnull)everything
                  wrappedError:(NiTestsError *_Nonnull)wrappedError
    SWIFT_WARN_UNUSED_RESULT SWIFT_AVAILABILITY(macos, introduced = 16.0.0)
        SWIFT_AVAILABILITY(ios, introduced = 13);
/// Returns passed in int.
- (NSNumber *_Nullable)echoIntWithAnInt:(int64_t)anInt
                           wrappedError:(NiTestsError *_Nonnull)wrappedError
    SWIFT_WARN_UNUSED_RESULT SWIFT_AVAILABILITY(macos, introduced = 16.0.0)
        SWIFT_AVAILABILITY(ios, introduced = 13);
/// Returns passed in double.
- (NSNumber *_Nullable)echoDoubleWithADouble:(double)aDouble
                                wrappedError:
                                    (NiTestsError *_Nonnull)wrappedError
    SWIFT_WARN_UNUSED_RESULT SWIFT_AVAILABILITY(macos, introduced = 16.0.0)
        SWIFT_AVAILABILITY(ios, introduced = 13);
/// Returns the passed in boolean.
- (NSNumber *_Nullable)echoBoolWithABool:(BOOL)aBool
                            wrappedError:(NiTestsError *_Nonnull)wrappedError
    SWIFT_WARN_UNUSED_RESULT SWIFT_AVAILABILITY(macos, introduced = 16.0.0)
        SWIFT_AVAILABILITY(ios, introduced = 13);
/// Returns the passed in string.
- (NSString *_Nullable)echoStringWithAString:(NSString *_Nonnull)aString
                                wrappedError:
                                    (NiTestsError *_Nonnull)wrappedError
    SWIFT_WARN_UNUSED_RESULT SWIFT_AVAILABILITY(macos, introduced = 16.0.0)
        SWIFT_AVAILABILITY(ios, introduced = 13);
/// Returns the passed in generic Object.
- (NSObject *_Nullable)echoObjectWithAnObject:(NSObject *_Nonnull)anObject
                                 wrappedError:
                                     (NiTestsError *_Nonnull)wrappedError
    SWIFT_WARN_UNUSED_RESULT SWIFT_AVAILABILITY(macos, introduced = 16.0.0)
        SWIFT_AVAILABILITY(ios, introduced = 13);
/// Returns the passed list, to test serialization and deserialization.
- (NSArray<NSObject *> *_Nullable)
    echoListWithList:(NSArray<NSObject *> *_Nonnull)list
        wrappedError:(NiTestsError *_Nonnull)wrappedError
    SWIFT_WARN_UNUSED_RESULT SWIFT_AVAILABILITY(macos, introduced = 16.0.0)
        SWIFT_AVAILABILITY(ios, introduced = 13);
/// Returns the passed list, to test serialization and deserialization.
- (NSArray<NSObject *> *_Nullable)
    echoStringListWithStringList:(NSArray<NSObject *> *_Nonnull)stringList
                    wrappedError:(NiTestsError *_Nonnull)wrappedError
    SWIFT_WARN_UNUSED_RESULT SWIFT_AVAILABILITY(macos, introduced = 16.0.0)
        SWIFT_AVAILABILITY(ios, introduced = 13);
/// Returns the passed list, to test serialization and deserialization.
- (NSArray<NSObject *> *_Nullable)
    echoIntListWithIntList:(NSArray<NSObject *> *_Nonnull)intList
              wrappedError:(NiTestsError *_Nonnull)wrappedError
    SWIFT_WARN_UNUSED_RESULT SWIFT_AVAILABILITY(macos, introduced = 16.0.0)
        SWIFT_AVAILABILITY(ios, introduced = 13);
/// Returns the passed list, to test serialization and deserialization.
- (NSArray<NSObject *> *_Nullable)
    echoDoubleListWithDoubleList:(NSArray<NSObject *> *_Nonnull)doubleList
                    wrappedError:(NiTestsError *_Nonnull)wrappedError
    SWIFT_WARN_UNUSED_RESULT SWIFT_AVAILABILITY(macos, introduced = 16.0.0)
        SWIFT_AVAILABILITY(ios, introduced = 13);
/// Returns the passed list, to test serialization and deserialization.
- (NSArray<NSObject *> *_Nullable)
    echoBoolListWithBoolList:(NSArray<NSObject *> *_Nonnull)boolList
                wrappedError:(NiTestsError *_Nonnull)wrappedError
    SWIFT_WARN_UNUSED_RESULT SWIFT_AVAILABILITY(macos, introduced = 16.0.0)
        SWIFT_AVAILABILITY(ios, introduced = 13);
/// Returns the passed map, to test serialization and deserialization.
- (NSDictionary<id<NSCopying>, NSObject *> *_Nullable)
    echoMapWithMap:(NSDictionary<id<NSCopying>, NSObject *> *_Nonnull)map
      wrappedError:(NiTestsError *_Nonnull)wrappedError SWIFT_WARN_UNUSED_RESULT
    SWIFT_AVAILABILITY(macos, introduced = 16.0.0)
        SWIFT_AVAILABILITY(ios, introduced = 13);
/// Returns the passed map, to test serialization and deserialization.
- (NSDictionary<id<NSCopying>, NSObject *> *_Nullable)
    echoStringMapWithStringMap:
        (NSDictionary<id<NSCopying>, NSObject *> *_Nonnull)stringMap
                  wrappedError:(NiTestsError *_Nonnull)wrappedError
    SWIFT_WARN_UNUSED_RESULT SWIFT_AVAILABILITY(macos, introduced = 16.0.0)
        SWIFT_AVAILABILITY(ios, introduced = 13);
/// Returns the passed map, to test serialization and deserialization.
/// Returns the passed class to test nested class serialization and
/// deserialization.
- (NIAllClassesWrapperBridge *_Nullable)
    echoClassWrapperWithWrapper:(NIAllClassesWrapperBridge *_Nonnull)wrapper
                   wrappedError:(NiTestsError *_Nonnull)wrappedError
    SWIFT_WARN_UNUSED_RESULT SWIFT_AVAILABILITY(macos, introduced = 16.0.0)
        SWIFT_AVAILABILITY(ios, introduced = 13);
/// Returns the passed enum to test serialization and deserialization.
- (NSNumber *_Nullable)echoEnumWithAnEnum:(enum NIAnEnum)anEnum
                             wrappedError:(NiTestsError *_Nonnull)wrappedError
    SWIFT_WARN_UNUSED_RESULT SWIFT_AVAILABILITY(macos, introduced = 16.0.0)
        SWIFT_AVAILABILITY(ios, introduced = 13);
/// Returns the passed enum to test serialization and deserialization.
- (NSNumber *_Nullable)
    echoAnotherEnumWithAnotherEnum:(enum NIAnotherEnum)anotherEnum
                      wrappedError:(NiTestsError *_Nonnull)wrappedError
    SWIFT_WARN_UNUSED_RESULT SWIFT_AVAILABILITY(macos, introduced = 16.0.0)
        SWIFT_AVAILABILITY(ios, introduced = 13);
/// Returns the passed object, to test serialization and deserialization.
/// Returns the passed object, to test serialization and deserialization.
- (NIAllNullableTypesWithoutRecursionBridge *_Nullable)
    echoAllNullableTypesWithoutRecursionWithEverything:
        (NIAllNullableTypesWithoutRecursionBridge *_Nullable)everything
                                          wrappedError:(NiTestsError *_Nonnull)
                                                           wrappedError
    SWIFT_WARN_UNUSED_RESULT SWIFT_AVAILABILITY(macos, introduced = 16.0.0)
        SWIFT_AVAILABILITY(ios, introduced = 13);
/// Returns the inner <code>aString</code> value from the wrapped object, to
/// test sending of nested objects.
- (NSString *_Nullable)
    extractNestedNullableStringWithWrapper:
        (NIAllClassesWrapperBridge *_Nonnull)wrapper
                              wrappedError:(NiTestsError *_Nonnull)wrappedError
    SWIFT_WARN_UNUSED_RESULT SWIFT_AVAILABILITY(macos, introduced = 16.0.0)
        SWIFT_AVAILABILITY(ios, introduced = 13);
/// Returns the inner <code>aString</code> value from the wrapped object, to
/// test sending of nested objects.
- (NIAllClassesWrapperBridge *_Nullable)
    createNestedNullableStringWithNullableString:
        (NSString *_Nullable)nullableString
                                    wrappedError:
                                        (NiTestsError *_Nonnull)wrappedError
    SWIFT_WARN_UNUSED_RESULT SWIFT_AVAILABILITY(macos, introduced = 16.0.0)
        SWIFT_AVAILABILITY(ios, introduced = 13);
/// Returns passed in arguments of multiple types.
- (NIAllNullableTypesWithoutRecursionBridge *_Nullable)
    sendMultipleNullableTypesWithoutRecursionWithANullableBool:
        (NSNumber *_Nullable)aNullableBool
                                                  aNullableInt:
                                                      (NSNumber *_Nullable)
                                                          aNullableInt
                                               aNullableString:
                                                   (NSString *_Nullable)
                                                       aNullableString
                                                  wrappedError:
                                                      (NiTestsError *_Nonnull)
                                                          wrappedError
    SWIFT_WARN_UNUSED_RESULT SWIFT_AVAILABILITY(macos, introduced = 16.0.0)
        SWIFT_AVAILABILITY(ios, introduced = 13);
/// Returns passed in int.
- (NSNumber *_Nullable)
    echoNullableIntWithANullableInt:(NSNumber *_Nullable)aNullableInt
                       wrappedError:(NiTestsError *_Nonnull)wrappedError
    SWIFT_WARN_UNUSED_RESULT SWIFT_AVAILABILITY(macos, introduced = 16.0.0)
        SWIFT_AVAILABILITY(ios, introduced = 13);
/// Returns passed in double.
- (NSNumber *_Nullable)
    echoNullableDoubleWithANullableDouble:(NSNumber *_Nullable)aNullableDouble
                             wrappedError:(NiTestsError *_Nonnull)wrappedError
    SWIFT_WARN_UNUSED_RESULT SWIFT_AVAILABILITY(macos, introduced = 16.0.0)
        SWIFT_AVAILABILITY(ios, introduced = 13);
/// Returns the passed in boolean.
- (NSNumber *_Nullable)
    echoNullableBoolWithANullableBool:(NSNumber *_Nullable)aNullableBool
                         wrappedError:(NiTestsError *_Nonnull)wrappedError
    SWIFT_WARN_UNUSED_RESULT SWIFT_AVAILABILITY(macos, introduced = 16.0.0)
        SWIFT_AVAILABILITY(ios, introduced = 13);
/// Returns the passed in string.
- (NSString *_Nullable)
    echoNullableStringWithANullableString:(NSString *_Nullable)aNullableString
                             wrappedError:(NiTestsError *_Nonnull)wrappedError
    SWIFT_WARN_UNUSED_RESULT SWIFT_AVAILABILITY(macos, introduced = 16.0.0)
        SWIFT_AVAILABILITY(ios, introduced = 13);
/// Returns the passed in generic Object.
- (NSObject *_Nullable)
    echoNullableObjectWithANullableObject:(NSObject *_Nonnull)aNullableObject
                             wrappedError:(NiTestsError *_Nonnull)wrappedError
    SWIFT_WARN_UNUSED_RESULT SWIFT_AVAILABILITY(macos, introduced = 16.0.0)
        SWIFT_AVAILABILITY(ios, introduced = 13);
/// Returns the passed list, to test serialization and deserialization.
- (NSArray<NSObject *> *_Nullable)
    echoNullableListWithANullableList:
        (NSArray<NSObject *> *_Nullable)aNullableList
                         wrappedError:(NiTestsError *_Nonnull)wrappedError
    SWIFT_WARN_UNUSED_RESULT SWIFT_AVAILABILITY(macos, introduced = 16.0.0)
        SWIFT_AVAILABILITY(ios, introduced = 13);
/// Returns the passed map, to test serialization and deserialization.
- (NSDictionary<id<NSCopying>, NSObject *> *_Nullable)
    echoNullableMapWithMap:
        (NSDictionary<id<NSCopying>, NSObject *> *_Nullable)map
              wrappedError:(NiTestsError *_Nonnull)wrappedError
    SWIFT_WARN_UNUSED_RESULT SWIFT_AVAILABILITY(macos, introduced = 16.0.0)
        SWIFT_AVAILABILITY(ios, introduced = 13);
- (NSNumber *_Nullable)echoNullableEnumWithAnEnum:(NSNumber *_Nullable)anEnum
                                     wrappedError:
                                         (NiTestsError *_Nonnull)wrappedError
    SWIFT_WARN_UNUSED_RESULT SWIFT_AVAILABILITY(macos, introduced = 16.0.0)
        SWIFT_AVAILABILITY(ios, introduced = 13);
- (NSNumber *_Nullable)
    echoAnotherNullableEnumWithAnotherEnum:(NSNumber *_Nullable)anotherEnum
                              wrappedError:(NiTestsError *_Nonnull)wrappedError
    SWIFT_WARN_UNUSED_RESULT SWIFT_AVAILABILITY(macos, introduced = 16.0.0)
        SWIFT_AVAILABILITY(ios, introduced = 13);
@end

/// Error class for passing custom error details to Dart side.
SWIFT_CLASS("_TtC11test_plugin12NiTestsError")
@interface NiTestsError : NSObject
@property(nonatomic, copy) NSString *_Nullable code;
@property(nonatomic, copy) NSString *_Nullable message;
@property(nonatomic, copy) NSString *_Nullable details;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithCode:(NSString *_Nullable)code
                             message:(NSString *_Nullable)message
                             details:(NSString *_Nullable)details
    OBJC_DESIGNATED_INITIALIZER;
@end

SWIFT_CLASS("_TtC11test_plugin13NumberWrapper")
@interface NumberWrapper : NSObject <NSCopying>
- (nonnull instancetype)initWithNumber:(NSNumber *_Nonnull)number
                                  type:(NSInteger)type
    OBJC_DESIGNATED_INITIALIZER;
- (id _Nonnull)copyWithZone:(struct _NSZone *_Nullable)zone
    SWIFT_WARN_UNUSED_RESULT;
@property(nonatomic, strong) NSNumber *_Nonnull number;
@property(nonatomic) NSInteger type;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

SWIFT_CLASS("_TtC11test_plugin18PigeonInternalNull")
@interface PigeonInternalNull : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

#endif
#if __has_attribute(external_source_symbol)
#pragma clang attribute pop
#endif
#if defined(__cplusplus)
#endif
#pragma clang diagnostic pop
#endif
