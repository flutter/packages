// Mocks generated by Mockito 5.4.6 from annotations
// in interactive_media_ads/test/android/companion_ad_slot_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:interactive_media_ads/src/android/interactive_media_ads.g.dart'
    as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakePigeonInstanceManager_0 extends _i1.SmartFake
    implements _i2.PigeonInstanceManager {
  _FakePigeonInstanceManager_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeViewGroup_1 extends _i1.SmartFake implements _i2.ViewGroup {
  _FakeViewGroup_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeCompanionAdSlot_2 extends _i1.SmartFake
    implements _i2.CompanionAdSlot {
  _FakeCompanionAdSlot_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeFrameLayout_3 extends _i1.SmartFake implements _i2.FrameLayout {
  _FakeFrameLayout_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeImaSdkSettings_4 extends _i1.SmartFake
    implements _i2.ImaSdkSettings {
  _FakeImaSdkSettings_4(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeAdsLoader_5 extends _i1.SmartFake implements _i2.AdsLoader {
  _FakeAdsLoader_5(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeAdsRequest_6 extends _i1.SmartFake implements _i2.AdsRequest {
  _FakeAdsRequest_6(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeAdsRenderingSettings_7 extends _i1.SmartFake
    implements _i2.AdsRenderingSettings {
  _FakeAdsRenderingSettings_7(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeImaSdkFactory_8 extends _i1.SmartFake implements _i2.ImaSdkFactory {
  _FakeImaSdkFactory_8(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [CompanionAdSlot].
///
/// See the documentation for Mockito's code generation for more information.
class MockCompanionAdSlot extends _i1.Mock implements _i2.CompanionAdSlot {
  @override
  _i2.PigeonInstanceManager get pigeon_instanceManager => (super.noSuchMethod(
        Invocation.getter(#pigeon_instanceManager),
        returnValue: _FakePigeonInstanceManager_0(
          this,
          Invocation.getter(#pigeon_instanceManager),
        ),
        returnValueForMissingStub: _FakePigeonInstanceManager_0(
          this,
          Invocation.getter(#pigeon_instanceManager),
        ),
      ) as _i2.PigeonInstanceManager);

  @override
  _i3.Future<void> addClickListener(
          _i2.CompanionAdSlotClickListener? clickListener) =>
      (super.noSuchMethod(
        Invocation.method(
          #addClickListener,
          [clickListener],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<_i2.ViewGroup> getContainer() => (super.noSuchMethod(
        Invocation.method(
          #getContainer,
          [],
        ),
        returnValue: _i3.Future<_i2.ViewGroup>.value(_FakeViewGroup_1(
          this,
          Invocation.method(
            #getContainer,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i3.Future<_i2.ViewGroup>.value(_FakeViewGroup_1(
          this,
          Invocation.method(
            #getContainer,
            [],
          ),
        )),
      ) as _i3.Future<_i2.ViewGroup>);

  @override
  _i3.Future<int> getHeight() => (super.noSuchMethod(
        Invocation.method(
          #getHeight,
          [],
        ),
        returnValue: _i3.Future<int>.value(0),
        returnValueForMissingStub: _i3.Future<int>.value(0),
      ) as _i3.Future<int>);

  @override
  _i3.Future<int> getWidth() => (super.noSuchMethod(
        Invocation.method(
          #getWidth,
          [],
        ),
        returnValue: _i3.Future<int>.value(0),
        returnValueForMissingStub: _i3.Future<int>.value(0),
      ) as _i3.Future<int>);

  @override
  _i3.Future<bool> isFilled() => (super.noSuchMethod(
        Invocation.method(
          #isFilled,
          [],
        ),
        returnValue: _i3.Future<bool>.value(false),
        returnValueForMissingStub: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);

  @override
  _i3.Future<void> removeClickListener(
          _i2.CompanionAdSlotClickListener? clickListener) =>
      (super.noSuchMethod(
        Invocation.method(
          #removeClickListener,
          [clickListener],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> setContainer(_i2.ViewGroup? container) =>
      (super.noSuchMethod(
        Invocation.method(
          #setContainer,
          [container],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> setSize(
    int? width,
    int? height,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setSize,
          [
            width,
            height,
          ],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> setFluidSize() => (super.noSuchMethod(
        Invocation.method(
          #setFluidSize,
          [],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i2.CompanionAdSlot pigeon_copy() => (super.noSuchMethod(
        Invocation.method(
          #pigeon_copy,
          [],
        ),
        returnValue: _FakeCompanionAdSlot_2(
          this,
          Invocation.method(
            #pigeon_copy,
            [],
          ),
        ),
        returnValueForMissingStub: _FakeCompanionAdSlot_2(
          this,
          Invocation.method(
            #pigeon_copy,
            [],
          ),
        ),
      ) as _i2.CompanionAdSlot);
}

/// A class which mocks [FrameLayout].
///
/// See the documentation for Mockito's code generation for more information.
class MockFrameLayout extends _i1.Mock implements _i2.FrameLayout {
  @override
  _i2.PigeonInstanceManager get pigeon_instanceManager => (super.noSuchMethod(
        Invocation.getter(#pigeon_instanceManager),
        returnValue: _FakePigeonInstanceManager_0(
          this,
          Invocation.getter(#pigeon_instanceManager),
        ),
        returnValueForMissingStub: _FakePigeonInstanceManager_0(
          this,
          Invocation.getter(#pigeon_instanceManager),
        ),
      ) as _i2.PigeonInstanceManager);

  @override
  _i2.FrameLayout pigeon_copy() => (super.noSuchMethod(
        Invocation.method(
          #pigeon_copy,
          [],
        ),
        returnValue: _FakeFrameLayout_3(
          this,
          Invocation.method(
            #pigeon_copy,
            [],
          ),
        ),
        returnValueForMissingStub: _FakeFrameLayout_3(
          this,
          Invocation.method(
            #pigeon_copy,
            [],
          ),
        ),
      ) as _i2.FrameLayout);

  @override
  _i3.Future<void> addView(_i2.View? view) => (super.noSuchMethod(
        Invocation.method(
          #addView,
          [view],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> removeView(_i2.View? view) => (super.noSuchMethod(
        Invocation.method(
          #removeView,
          [view],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);
}

/// A class which mocks [ImaSdkFactory].
///
/// See the documentation for Mockito's code generation for more information.
class MockImaSdkFactory extends _i1.Mock implements _i2.ImaSdkFactory {
  @override
  _i2.PigeonInstanceManager get pigeon_instanceManager => (super.noSuchMethod(
        Invocation.getter(#pigeon_instanceManager),
        returnValue: _FakePigeonInstanceManager_0(
          this,
          Invocation.getter(#pigeon_instanceManager),
        ),
        returnValueForMissingStub: _FakePigeonInstanceManager_0(
          this,
          Invocation.getter(#pigeon_instanceManager),
        ),
      ) as _i2.PigeonInstanceManager);

  @override
  _i3.Future<_i2.CompanionAdSlot> createCompanionAdSlot() =>
      (super.noSuchMethod(
        Invocation.method(
          #createCompanionAdSlot,
          [],
        ),
        returnValue:
            _i3.Future<_i2.CompanionAdSlot>.value(_FakeCompanionAdSlot_2(
          this,
          Invocation.method(
            #createCompanionAdSlot,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i3.Future<_i2.CompanionAdSlot>.value(_FakeCompanionAdSlot_2(
          this,
          Invocation.method(
            #createCompanionAdSlot,
            [],
          ),
        )),
      ) as _i3.Future<_i2.CompanionAdSlot>);

  @override
  _i3.Future<_i2.ImaSdkSettings> createImaSdkSettings() => (super.noSuchMethod(
        Invocation.method(
          #createImaSdkSettings,
          [],
        ),
        returnValue: _i3.Future<_i2.ImaSdkSettings>.value(_FakeImaSdkSettings_4(
          this,
          Invocation.method(
            #createImaSdkSettings,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i3.Future<_i2.ImaSdkSettings>.value(_FakeImaSdkSettings_4(
          this,
          Invocation.method(
            #createImaSdkSettings,
            [],
          ),
        )),
      ) as _i3.Future<_i2.ImaSdkSettings>);

  @override
  _i3.Future<_i2.AdsLoader> createAdsLoader(
    _i2.ImaSdkSettings? settings,
    _i2.AdDisplayContainer? container,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #createAdsLoader,
          [
            settings,
            container,
          ],
        ),
        returnValue: _i3.Future<_i2.AdsLoader>.value(_FakeAdsLoader_5(
          this,
          Invocation.method(
            #createAdsLoader,
            [
              settings,
              container,
            ],
          ),
        )),
        returnValueForMissingStub:
            _i3.Future<_i2.AdsLoader>.value(_FakeAdsLoader_5(
          this,
          Invocation.method(
            #createAdsLoader,
            [
              settings,
              container,
            ],
          ),
        )),
      ) as _i3.Future<_i2.AdsLoader>);

  @override
  _i3.Future<_i2.AdsRequest> createAdsRequest() => (super.noSuchMethod(
        Invocation.method(
          #createAdsRequest,
          [],
        ),
        returnValue: _i3.Future<_i2.AdsRequest>.value(_FakeAdsRequest_6(
          this,
          Invocation.method(
            #createAdsRequest,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i3.Future<_i2.AdsRequest>.value(_FakeAdsRequest_6(
          this,
          Invocation.method(
            #createAdsRequest,
            [],
          ),
        )),
      ) as _i3.Future<_i2.AdsRequest>);

  @override
  _i3.Future<_i2.AdsRenderingSettings> createAdsRenderingSettings() =>
      (super.noSuchMethod(
        Invocation.method(
          #createAdsRenderingSettings,
          [],
        ),
        returnValue: _i3.Future<_i2.AdsRenderingSettings>.value(
            _FakeAdsRenderingSettings_7(
          this,
          Invocation.method(
            #createAdsRenderingSettings,
            [],
          ),
        )),
        returnValueForMissingStub: _i3.Future<_i2.AdsRenderingSettings>.value(
            _FakeAdsRenderingSettings_7(
          this,
          Invocation.method(
            #createAdsRenderingSettings,
            [],
          ),
        )),
      ) as _i3.Future<_i2.AdsRenderingSettings>);

  @override
  _i2.ImaSdkFactory pigeon_copy() => (super.noSuchMethod(
        Invocation.method(
          #pigeon_copy,
          [],
        ),
        returnValue: _FakeImaSdkFactory_8(
          this,
          Invocation.method(
            #pigeon_copy,
            [],
          ),
        ),
        returnValueForMissingStub: _FakeImaSdkFactory_8(
          this,
          Invocation.method(
            #pigeon_copy,
            [],
          ),
        ),
      ) as _i2.ImaSdkFactory);
}
