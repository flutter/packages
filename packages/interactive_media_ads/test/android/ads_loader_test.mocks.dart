// Mocks generated by Mockito 5.4.4 from annotations
// in interactive_media_ads/test/android/ads_loader_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i6;
import 'dart:ui' as _i3;

import 'package:flutter/services.dart' as _i4;
import 'package:interactive_media_ads/src/android/interactive_media_ads.g.dart'
    as _i2;
import 'package:interactive_media_ads/src/android/platform_views_service_proxy.dart'
    as _i7;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i5;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakePigeonInstanceManager_0 extends _i1.SmartFake
    implements _i2.PigeonInstanceManager {
  _FakePigeonInstanceManager_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeAdDisplayContainer_1 extends _i1.SmartFake
    implements _i2.AdDisplayContainer {
  _FakeAdDisplayContainer_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeAdError_2 extends _i1.SmartFake implements _i2.AdError {
  _FakeAdError_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeAdErrorEvent_3 extends _i1.SmartFake implements _i2.AdErrorEvent {
  _FakeAdErrorEvent_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeAdErrorListener_4 extends _i1.SmartFake
    implements _i2.AdErrorListener {
  _FakeAdErrorListener_4(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeAdsLoadedListener_5 extends _i1.SmartFake
    implements _i2.AdsLoadedListener {
  _FakeAdsLoadedListener_5(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeAdsManager_6 extends _i1.SmartFake implements _i2.AdsManager {
  _FakeAdsManager_6(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeAdsManagerLoadedEvent_7 extends _i1.SmartFake
    implements _i2.AdsManagerLoadedEvent {
  _FakeAdsManagerLoadedEvent_7(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeAdsLoader_8 extends _i1.SmartFake implements _i2.AdsLoader {
  _FakeAdsLoader_8(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeAdsRequest_9 extends _i1.SmartFake implements _i2.AdsRequest {
  _FakeAdsRequest_9(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeFrameLayout_10 extends _i1.SmartFake implements _i2.FrameLayout {
  _FakeFrameLayout_10(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeImaSdkSettings_11 extends _i1.SmartFake
    implements _i2.ImaSdkSettings {
  _FakeImaSdkSettings_11(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeAdsRenderingSettings_12 extends _i1.SmartFake
    implements _i2.AdsRenderingSettings {
  _FakeAdsRenderingSettings_12(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeImaSdkFactory_13 extends _i1.SmartFake implements _i2.ImaSdkFactory {
  _FakeImaSdkFactory_13(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeVideoAdPlayer_14 extends _i1.SmartFake implements _i2.VideoAdPlayer {
  _FakeVideoAdPlayer_14(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeVideoAdPlayerCallback_15 extends _i1.SmartFake
    implements _i2.VideoAdPlayerCallback {
  _FakeVideoAdPlayerCallback_15(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeVideoView_16 extends _i1.SmartFake implements _i2.VideoView {
  _FakeVideoView_16(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeOffset_17 extends _i1.SmartFake implements _i3.Offset {
  _FakeOffset_17(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSize_18 extends _i1.SmartFake implements _i3.Size {
  _FakeSize_18(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeExpensiveAndroidViewController_19 extends _i1.SmartFake
    implements _i4.ExpensiveAndroidViewController {
  _FakeExpensiveAndroidViewController_19(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSurfaceAndroidViewController_20 extends _i1.SmartFake
    implements _i4.SurfaceAndroidViewController {
  _FakeSurfaceAndroidViewController_20(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [AdDisplayContainer].
///
/// See the documentation for Mockito's code generation for more information.
class MockAdDisplayContainer extends _i1.Mock
    implements _i2.AdDisplayContainer {
  @override
  _i2.PigeonInstanceManager get pigeon_instanceManager => (super.noSuchMethod(
        Invocation.getter(#pigeon_instanceManager),
        returnValue: _FakePigeonInstanceManager_0(
          this,
          Invocation.getter(#pigeon_instanceManager),
        ),
        returnValueForMissingStub: _FakePigeonInstanceManager_0(
          this,
          Invocation.getter(#pigeon_instanceManager),
        ),
      ) as _i2.PigeonInstanceManager);

  @override
  _i2.AdDisplayContainer pigeon_copy() => (super.noSuchMethod(
        Invocation.method(
          #pigeon_copy,
          [],
        ),
        returnValue: _FakeAdDisplayContainer_1(
          this,
          Invocation.method(
            #pigeon_copy,
            [],
          ),
        ),
        returnValueForMissingStub: _FakeAdDisplayContainer_1(
          this,
          Invocation.method(
            #pigeon_copy,
            [],
          ),
        ),
      ) as _i2.AdDisplayContainer);
}

/// A class which mocks [AdError].
///
/// See the documentation for Mockito's code generation for more information.
class MockAdError extends _i1.Mock implements _i2.AdError {
  @override
  _i2.AdErrorCode get errorCode => (super.noSuchMethod(
        Invocation.getter(#errorCode),
        returnValue: _i2.AdErrorCode.adsPlayerWasNotProvided,
        returnValueForMissingStub: _i2.AdErrorCode.adsPlayerWasNotProvided,
      ) as _i2.AdErrorCode);

  @override
  int get errorCodeNumber => (super.noSuchMethod(
        Invocation.getter(#errorCodeNumber),
        returnValue: 0,
        returnValueForMissingStub: 0,
      ) as int);

  @override
  _i2.AdErrorType get errorType => (super.noSuchMethod(
        Invocation.getter(#errorType),
        returnValue: _i2.AdErrorType.load,
        returnValueForMissingStub: _i2.AdErrorType.load,
      ) as _i2.AdErrorType);

  @override
  String get message => (super.noSuchMethod(
        Invocation.getter(#message),
        returnValue: _i5.dummyValue<String>(
          this,
          Invocation.getter(#message),
        ),
        returnValueForMissingStub: _i5.dummyValue<String>(
          this,
          Invocation.getter(#message),
        ),
      ) as String);

  @override
  _i2.PigeonInstanceManager get pigeon_instanceManager => (super.noSuchMethod(
        Invocation.getter(#pigeon_instanceManager),
        returnValue: _FakePigeonInstanceManager_0(
          this,
          Invocation.getter(#pigeon_instanceManager),
        ),
        returnValueForMissingStub: _FakePigeonInstanceManager_0(
          this,
          Invocation.getter(#pigeon_instanceManager),
        ),
      ) as _i2.PigeonInstanceManager);

  @override
  _i2.AdError pigeon_copy() => (super.noSuchMethod(
        Invocation.method(
          #pigeon_copy,
          [],
        ),
        returnValue: _FakeAdError_2(
          this,
          Invocation.method(
            #pigeon_copy,
            [],
          ),
        ),
        returnValueForMissingStub: _FakeAdError_2(
          this,
          Invocation.method(
            #pigeon_copy,
            [],
          ),
        ),
      ) as _i2.AdError);
}

/// A class which mocks [AdErrorEvent].
///
/// See the documentation for Mockito's code generation for more information.
class MockAdErrorEvent extends _i1.Mock implements _i2.AdErrorEvent {
  @override
  _i2.AdError get error => (super.noSuchMethod(
        Invocation.getter(#error),
        returnValue: _FakeAdError_2(
          this,
          Invocation.getter(#error),
        ),
        returnValueForMissingStub: _FakeAdError_2(
          this,
          Invocation.getter(#error),
        ),
      ) as _i2.AdError);

  @override
  _i2.PigeonInstanceManager get pigeon_instanceManager => (super.noSuchMethod(
        Invocation.getter(#pigeon_instanceManager),
        returnValue: _FakePigeonInstanceManager_0(
          this,
          Invocation.getter(#pigeon_instanceManager),
        ),
        returnValueForMissingStub: _FakePigeonInstanceManager_0(
          this,
          Invocation.getter(#pigeon_instanceManager),
        ),
      ) as _i2.PigeonInstanceManager);

  @override
  _i2.AdErrorEvent pigeon_copy() => (super.noSuchMethod(
        Invocation.method(
          #pigeon_copy,
          [],
        ),
        returnValue: _FakeAdErrorEvent_3(
          this,
          Invocation.method(
            #pigeon_copy,
            [],
          ),
        ),
        returnValueForMissingStub: _FakeAdErrorEvent_3(
          this,
          Invocation.method(
            #pigeon_copy,
            [],
          ),
        ),
      ) as _i2.AdErrorEvent);
}

/// A class which mocks [AdErrorListener].
///
/// See the documentation for Mockito's code generation for more information.
class MockAdErrorListener extends _i1.Mock implements _i2.AdErrorListener {
  @override
  void Function(
    _i2.AdErrorListener,
    _i2.AdErrorEvent,
  ) get onAdError => (super.noSuchMethod(
        Invocation.getter(#onAdError),
        returnValue: (
          _i2.AdErrorListener pigeon_instance,
          _i2.AdErrorEvent event,
        ) {},
        returnValueForMissingStub: (
          _i2.AdErrorListener pigeon_instance,
          _i2.AdErrorEvent event,
        ) {},
      ) as void Function(
        _i2.AdErrorListener,
        _i2.AdErrorEvent,
      ));

  @override
  _i2.PigeonInstanceManager get pigeon_instanceManager => (super.noSuchMethod(
        Invocation.getter(#pigeon_instanceManager),
        returnValue: _FakePigeonInstanceManager_0(
          this,
          Invocation.getter(#pigeon_instanceManager),
        ),
        returnValueForMissingStub: _FakePigeonInstanceManager_0(
          this,
          Invocation.getter(#pigeon_instanceManager),
        ),
      ) as _i2.PigeonInstanceManager);

  @override
  _i2.AdErrorListener pigeon_copy() => (super.noSuchMethod(
        Invocation.method(
          #pigeon_copy,
          [],
        ),
        returnValue: _FakeAdErrorListener_4(
          this,
          Invocation.method(
            #pigeon_copy,
            [],
          ),
        ),
        returnValueForMissingStub: _FakeAdErrorListener_4(
          this,
          Invocation.method(
            #pigeon_copy,
            [],
          ),
        ),
      ) as _i2.AdErrorListener);
}

/// A class which mocks [AdsLoadedListener].
///
/// See the documentation for Mockito's code generation for more information.
class MockAdsLoadedListener extends _i1.Mock implements _i2.AdsLoadedListener {
  @override
  void Function(
    _i2.AdsLoadedListener,
    _i2.AdsManagerLoadedEvent,
  ) get onAdsManagerLoaded => (super.noSuchMethod(
        Invocation.getter(#onAdsManagerLoaded),
        returnValue: (
          _i2.AdsLoadedListener pigeon_instance,
          _i2.AdsManagerLoadedEvent event,
        ) {},
        returnValueForMissingStub: (
          _i2.AdsLoadedListener pigeon_instance,
          _i2.AdsManagerLoadedEvent event,
        ) {},
      ) as void Function(
        _i2.AdsLoadedListener,
        _i2.AdsManagerLoadedEvent,
      ));

  @override
  _i2.PigeonInstanceManager get pigeon_instanceManager => (super.noSuchMethod(
        Invocation.getter(#pigeon_instanceManager),
        returnValue: _FakePigeonInstanceManager_0(
          this,
          Invocation.getter(#pigeon_instanceManager),
        ),
        returnValueForMissingStub: _FakePigeonInstanceManager_0(
          this,
          Invocation.getter(#pigeon_instanceManager),
        ),
      ) as _i2.PigeonInstanceManager);

  @override
  _i2.AdsLoadedListener pigeon_copy() => (super.noSuchMethod(
        Invocation.method(
          #pigeon_copy,
          [],
        ),
        returnValue: _FakeAdsLoadedListener_5(
          this,
          Invocation.method(
            #pigeon_copy,
            [],
          ),
        ),
        returnValueForMissingStub: _FakeAdsLoadedListener_5(
          this,
          Invocation.method(
            #pigeon_copy,
            [],
          ),
        ),
      ) as _i2.AdsLoadedListener);
}

/// A class which mocks [AdsManager].
///
/// See the documentation for Mockito's code generation for more information.
class MockAdsManager extends _i1.Mock implements _i2.AdsManager {
  @override
  _i2.PigeonInstanceManager get pigeon_instanceManager => (super.noSuchMethod(
        Invocation.getter(#pigeon_instanceManager),
        returnValue: _FakePigeonInstanceManager_0(
          this,
          Invocation.getter(#pigeon_instanceManager),
        ),
        returnValueForMissingStub: _FakePigeonInstanceManager_0(
          this,
          Invocation.getter(#pigeon_instanceManager),
        ),
      ) as _i2.PigeonInstanceManager);

  @override
  _i6.Future<void> discardAdBreak() => (super.noSuchMethod(
        Invocation.method(
          #discardAdBreak,
          [],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> pause() => (super.noSuchMethod(
        Invocation.method(
          #pause,
          [],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> start() => (super.noSuchMethod(
        Invocation.method(
          #start,
          [],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<List<double>> getAdCuePoints() => (super.noSuchMethod(
        Invocation.method(
          #getAdCuePoints,
          [],
        ),
        returnValue: _i6.Future<List<double>>.value(<double>[]),
        returnValueForMissingStub: _i6.Future<List<double>>.value(<double>[]),
      ) as _i6.Future<List<double>>);

  @override
  _i6.Future<void> resume() => (super.noSuchMethod(
        Invocation.method(
          #resume,
          [],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> skip() => (super.noSuchMethod(
        Invocation.method(
          #skip,
          [],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i2.AdsManager pigeon_copy() => (super.noSuchMethod(
        Invocation.method(
          #pigeon_copy,
          [],
        ),
        returnValue: _FakeAdsManager_6(
          this,
          Invocation.method(
            #pigeon_copy,
            [],
          ),
        ),
        returnValueForMissingStub: _FakeAdsManager_6(
          this,
          Invocation.method(
            #pigeon_copy,
            [],
          ),
        ),
      ) as _i2.AdsManager);

  @override
  _i6.Future<void> addAdErrorListener(_i2.AdErrorListener? errorListener) =>
      (super.noSuchMethod(
        Invocation.method(
          #addAdErrorListener,
          [errorListener],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> addAdEventListener(_i2.AdEventListener? adEventListener) =>
      (super.noSuchMethod(
        Invocation.method(
          #addAdEventListener,
          [adEventListener],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> destroy() => (super.noSuchMethod(
        Invocation.method(
          #destroy,
          [],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> init(_i2.AdsRenderingSettings? settings) =>
      (super.noSuchMethod(
        Invocation.method(
          #init,
          [settings],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> focus() => (super.noSuchMethod(
        Invocation.method(
          #focus,
          [],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<_i2.AdProgressInfo?> getAdProgressInfo() => (super.noSuchMethod(
        Invocation.method(
          #getAdProgressInfo,
          [],
        ),
        returnValue: _i6.Future<_i2.AdProgressInfo?>.value(),
        returnValueForMissingStub: _i6.Future<_i2.AdProgressInfo?>.value(),
      ) as _i6.Future<_i2.AdProgressInfo?>);

  @override
  _i6.Future<_i2.Ad?> getCurrentAd() => (super.noSuchMethod(
        Invocation.method(
          #getCurrentAd,
          [],
        ),
        returnValue: _i6.Future<_i2.Ad?>.value(),
        returnValueForMissingStub: _i6.Future<_i2.Ad?>.value(),
      ) as _i6.Future<_i2.Ad?>);

  @override
  _i6.Future<void> removeAdErrorListener(_i2.AdErrorListener? errorListener) =>
      (super.noSuchMethod(
        Invocation.method(
          #removeAdErrorListener,
          [errorListener],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> removeAdEventListener(
          _i2.AdEventListener? adEventListener) =>
      (super.noSuchMethod(
        Invocation.method(
          #removeAdEventListener,
          [adEventListener],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);
}

/// A class which mocks [AdsManagerLoadedEvent].
///
/// See the documentation for Mockito's code generation for more information.
class MockAdsManagerLoadedEvent extends _i1.Mock
    implements _i2.AdsManagerLoadedEvent {
  @override
  _i2.AdsManager get manager => (super.noSuchMethod(
        Invocation.getter(#manager),
        returnValue: _FakeAdsManager_6(
          this,
          Invocation.getter(#manager),
        ),
        returnValueForMissingStub: _FakeAdsManager_6(
          this,
          Invocation.getter(#manager),
        ),
      ) as _i2.AdsManager);

  @override
  _i2.PigeonInstanceManager get pigeon_instanceManager => (super.noSuchMethod(
        Invocation.getter(#pigeon_instanceManager),
        returnValue: _FakePigeonInstanceManager_0(
          this,
          Invocation.getter(#pigeon_instanceManager),
        ),
        returnValueForMissingStub: _FakePigeonInstanceManager_0(
          this,
          Invocation.getter(#pigeon_instanceManager),
        ),
      ) as _i2.PigeonInstanceManager);

  @override
  _i2.AdsManagerLoadedEvent pigeon_copy() => (super.noSuchMethod(
        Invocation.method(
          #pigeon_copy,
          [],
        ),
        returnValue: _FakeAdsManagerLoadedEvent_7(
          this,
          Invocation.method(
            #pigeon_copy,
            [],
          ),
        ),
        returnValueForMissingStub: _FakeAdsManagerLoadedEvent_7(
          this,
          Invocation.method(
            #pigeon_copy,
            [],
          ),
        ),
      ) as _i2.AdsManagerLoadedEvent);
}

/// A class which mocks [AdsLoader].
///
/// See the documentation for Mockito's code generation for more information.
class MockAdsLoader extends _i1.Mock implements _i2.AdsLoader {
  @override
  _i2.PigeonInstanceManager get pigeon_instanceManager => (super.noSuchMethod(
        Invocation.getter(#pigeon_instanceManager),
        returnValue: _FakePigeonInstanceManager_0(
          this,
          Invocation.getter(#pigeon_instanceManager),
        ),
        returnValueForMissingStub: _FakePigeonInstanceManager_0(
          this,
          Invocation.getter(#pigeon_instanceManager),
        ),
      ) as _i2.PigeonInstanceManager);

  @override
  _i6.Future<void> addAdErrorListener(_i2.AdErrorListener? listener) =>
      (super.noSuchMethod(
        Invocation.method(
          #addAdErrorListener,
          [listener],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> addAdsLoadedListener(_i2.AdsLoadedListener? listener) =>
      (super.noSuchMethod(
        Invocation.method(
          #addAdsLoadedListener,
          [listener],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> requestAds(_i2.AdsRequest? request) => (super.noSuchMethod(
        Invocation.method(
          #requestAds,
          [request],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i2.AdsLoader pigeon_copy() => (super.noSuchMethod(
        Invocation.method(
          #pigeon_copy,
          [],
        ),
        returnValue: _FakeAdsLoader_8(
          this,
          Invocation.method(
            #pigeon_copy,
            [],
          ),
        ),
        returnValueForMissingStub: _FakeAdsLoader_8(
          this,
          Invocation.method(
            #pigeon_copy,
            [],
          ),
        ),
      ) as _i2.AdsLoader);
}

/// A class which mocks [AdsRequest].
///
/// See the documentation for Mockito's code generation for more information.
class MockAdsRequest extends _i1.Mock implements _i2.AdsRequest {
  @override
  _i2.PigeonInstanceManager get pigeon_instanceManager => (super.noSuchMethod(
        Invocation.getter(#pigeon_instanceManager),
        returnValue: _FakePigeonInstanceManager_0(
          this,
          Invocation.getter(#pigeon_instanceManager),
        ),
        returnValueForMissingStub: _FakePigeonInstanceManager_0(
          this,
          Invocation.getter(#pigeon_instanceManager),
        ),
      ) as _i2.PigeonInstanceManager);

  @override
  _i6.Future<void> setAdTagUrl(String? adTagUrl) => (super.noSuchMethod(
        Invocation.method(
          #setAdTagUrl,
          [adTagUrl],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> setContentProgressProvider(
          _i2.ContentProgressProvider? provider) =>
      (super.noSuchMethod(
        Invocation.method(
          #setContentProgressProvider,
          [provider],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i2.AdsRequest pigeon_copy() => (super.noSuchMethod(
        Invocation.method(
          #pigeon_copy,
          [],
        ),
        returnValue: _FakeAdsRequest_9(
          this,
          Invocation.method(
            #pigeon_copy,
            [],
          ),
        ),
        returnValueForMissingStub: _FakeAdsRequest_9(
          this,
          Invocation.method(
            #pigeon_copy,
            [],
          ),
        ),
      ) as _i2.AdsRequest);
}

/// A class which mocks [FrameLayout].
///
/// See the documentation for Mockito's code generation for more information.
class MockFrameLayout extends _i1.Mock implements _i2.FrameLayout {
  @override
  _i2.PigeonInstanceManager get pigeon_instanceManager => (super.noSuchMethod(
        Invocation.getter(#pigeon_instanceManager),
        returnValue: _FakePigeonInstanceManager_0(
          this,
          Invocation.getter(#pigeon_instanceManager),
        ),
        returnValueForMissingStub: _FakePigeonInstanceManager_0(
          this,
          Invocation.getter(#pigeon_instanceManager),
        ),
      ) as _i2.PigeonInstanceManager);

  @override
  _i2.FrameLayout pigeon_copy() => (super.noSuchMethod(
        Invocation.method(
          #pigeon_copy,
          [],
        ),
        returnValue: _FakeFrameLayout_10(
          this,
          Invocation.method(
            #pigeon_copy,
            [],
          ),
        ),
        returnValueForMissingStub: _FakeFrameLayout_10(
          this,
          Invocation.method(
            #pigeon_copy,
            [],
          ),
        ),
      ) as _i2.FrameLayout);

  @override
  _i6.Future<void> addView(_i2.View? view) => (super.noSuchMethod(
        Invocation.method(
          #addView,
          [view],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> removeView(_i2.View? view) => (super.noSuchMethod(
        Invocation.method(
          #removeView,
          [view],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);
}

/// A class which mocks [ImaSdkFactory].
///
/// See the documentation for Mockito's code generation for more information.
class MockImaSdkFactory extends _i1.Mock implements _i2.ImaSdkFactory {
  @override
  _i2.PigeonInstanceManager get pigeon_instanceManager => (super.noSuchMethod(
        Invocation.getter(#pigeon_instanceManager),
        returnValue: _FakePigeonInstanceManager_0(
          this,
          Invocation.getter(#pigeon_instanceManager),
        ),
        returnValueForMissingStub: _FakePigeonInstanceManager_0(
          this,
          Invocation.getter(#pigeon_instanceManager),
        ),
      ) as _i2.PigeonInstanceManager);

  @override
  _i6.Future<_i2.ImaSdkSettings> createImaSdkSettings() => (super.noSuchMethod(
        Invocation.method(
          #createImaSdkSettings,
          [],
        ),
        returnValue:
            _i6.Future<_i2.ImaSdkSettings>.value(_FakeImaSdkSettings_11(
          this,
          Invocation.method(
            #createImaSdkSettings,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i6.Future<_i2.ImaSdkSettings>.value(_FakeImaSdkSettings_11(
          this,
          Invocation.method(
            #createImaSdkSettings,
            [],
          ),
        )),
      ) as _i6.Future<_i2.ImaSdkSettings>);

  @override
  _i6.Future<_i2.AdsLoader> createAdsLoader(
    _i2.ImaSdkSettings? settings,
    _i2.AdDisplayContainer? container,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #createAdsLoader,
          [
            settings,
            container,
          ],
        ),
        returnValue: _i6.Future<_i2.AdsLoader>.value(_FakeAdsLoader_8(
          this,
          Invocation.method(
            #createAdsLoader,
            [
              settings,
              container,
            ],
          ),
        )),
        returnValueForMissingStub:
            _i6.Future<_i2.AdsLoader>.value(_FakeAdsLoader_8(
          this,
          Invocation.method(
            #createAdsLoader,
            [
              settings,
              container,
            ],
          ),
        )),
      ) as _i6.Future<_i2.AdsLoader>);

  @override
  _i6.Future<_i2.AdsRequest> createAdsRequest() => (super.noSuchMethod(
        Invocation.method(
          #createAdsRequest,
          [],
        ),
        returnValue: _i6.Future<_i2.AdsRequest>.value(_FakeAdsRequest_9(
          this,
          Invocation.method(
            #createAdsRequest,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i6.Future<_i2.AdsRequest>.value(_FakeAdsRequest_9(
          this,
          Invocation.method(
            #createAdsRequest,
            [],
          ),
        )),
      ) as _i6.Future<_i2.AdsRequest>);

  @override
  _i6.Future<_i2.AdsRenderingSettings> createAdsRenderingSettings() =>
      (super.noSuchMethod(
        Invocation.method(
          #createAdsRenderingSettings,
          [],
        ),
        returnValue: _i6.Future<_i2.AdsRenderingSettings>.value(
            _FakeAdsRenderingSettings_12(
          this,
          Invocation.method(
            #createAdsRenderingSettings,
            [],
          ),
        )),
        returnValueForMissingStub: _i6.Future<_i2.AdsRenderingSettings>.value(
            _FakeAdsRenderingSettings_12(
          this,
          Invocation.method(
            #createAdsRenderingSettings,
            [],
          ),
        )),
      ) as _i6.Future<_i2.AdsRenderingSettings>);

  @override
  _i2.ImaSdkFactory pigeon_copy() => (super.noSuchMethod(
        Invocation.method(
          #pigeon_copy,
          [],
        ),
        returnValue: _FakeImaSdkFactory_13(
          this,
          Invocation.method(
            #pigeon_copy,
            [],
          ),
        ),
        returnValueForMissingStub: _FakeImaSdkFactory_13(
          this,
          Invocation.method(
            #pigeon_copy,
            [],
          ),
        ),
      ) as _i2.ImaSdkFactory);
}

/// A class which mocks [ImaSdkSettings].
///
/// See the documentation for Mockito's code generation for more information.
class MockImaSdkSettings extends _i1.Mock implements _i2.ImaSdkSettings {
  @override
  _i2.PigeonInstanceManager get pigeon_instanceManager => (super.noSuchMethod(
        Invocation.getter(#pigeon_instanceManager),
        returnValue: _FakePigeonInstanceManager_0(
          this,
          Invocation.getter(#pigeon_instanceManager),
        ),
        returnValueForMissingStub: _FakePigeonInstanceManager_0(
          this,
          Invocation.getter(#pigeon_instanceManager),
        ),
      ) as _i2.PigeonInstanceManager);

  @override
  _i2.ImaSdkSettings pigeon_copy() => (super.noSuchMethod(
        Invocation.method(
          #pigeon_copy,
          [],
        ),
        returnValue: _FakeImaSdkSettings_11(
          this,
          Invocation.method(
            #pigeon_copy,
            [],
          ),
        ),
        returnValueForMissingStub: _FakeImaSdkSettings_11(
          this,
          Invocation.method(
            #pigeon_copy,
            [],
          ),
        ),
      ) as _i2.ImaSdkSettings);
}

/// A class which mocks [VideoAdPlayer].
///
/// See the documentation for Mockito's code generation for more information.
class MockVideoAdPlayer extends _i1.Mock implements _i2.VideoAdPlayer {
  @override
  void Function(
    _i2.VideoAdPlayer,
    _i2.VideoAdPlayerCallback,
  ) get addCallback => (super.noSuchMethod(
        Invocation.getter(#addCallback),
        returnValue: (
          _i2.VideoAdPlayer pigeon_instance,
          _i2.VideoAdPlayerCallback callback,
        ) {},
        returnValueForMissingStub: (
          _i2.VideoAdPlayer pigeon_instance,
          _i2.VideoAdPlayerCallback callback,
        ) {},
      ) as void Function(
        _i2.VideoAdPlayer,
        _i2.VideoAdPlayerCallback,
      ));

  @override
  void Function(
    _i2.VideoAdPlayer,
    _i2.AdMediaInfo,
    _i2.AdPodInfo,
  ) get loadAd => (super.noSuchMethod(
        Invocation.getter(#loadAd),
        returnValue: (
          _i2.VideoAdPlayer pigeon_instance,
          _i2.AdMediaInfo adMediaInfo,
          _i2.AdPodInfo adPodInfo,
        ) {},
        returnValueForMissingStub: (
          _i2.VideoAdPlayer pigeon_instance,
          _i2.AdMediaInfo adMediaInfo,
          _i2.AdPodInfo adPodInfo,
        ) {},
      ) as void Function(
        _i2.VideoAdPlayer,
        _i2.AdMediaInfo,
        _i2.AdPodInfo,
      ));

  @override
  void Function(
    _i2.VideoAdPlayer,
    _i2.AdMediaInfo,
  ) get pauseAd => (super.noSuchMethod(
        Invocation.getter(#pauseAd),
        returnValue: (
          _i2.VideoAdPlayer pigeon_instance,
          _i2.AdMediaInfo adMediaInfo,
        ) {},
        returnValueForMissingStub: (
          _i2.VideoAdPlayer pigeon_instance,
          _i2.AdMediaInfo adMediaInfo,
        ) {},
      ) as void Function(
        _i2.VideoAdPlayer,
        _i2.AdMediaInfo,
      ));

  @override
  void Function(
    _i2.VideoAdPlayer,
    _i2.AdMediaInfo,
  ) get playAd => (super.noSuchMethod(
        Invocation.getter(#playAd),
        returnValue: (
          _i2.VideoAdPlayer pigeon_instance,
          _i2.AdMediaInfo adMediaInfo,
        ) {},
        returnValueForMissingStub: (
          _i2.VideoAdPlayer pigeon_instance,
          _i2.AdMediaInfo adMediaInfo,
        ) {},
      ) as void Function(
        _i2.VideoAdPlayer,
        _i2.AdMediaInfo,
      ));

  @override
  void Function(_i2.VideoAdPlayer) get release => (super.noSuchMethod(
        Invocation.getter(#release),
        returnValue: (_i2.VideoAdPlayer pigeon_instance) {},
        returnValueForMissingStub: (_i2.VideoAdPlayer pigeon_instance) {},
      ) as void Function(_i2.VideoAdPlayer));

  @override
  void Function(
    _i2.VideoAdPlayer,
    _i2.VideoAdPlayerCallback,
  ) get removeCallback => (super.noSuchMethod(
        Invocation.getter(#removeCallback),
        returnValue: (
          _i2.VideoAdPlayer pigeon_instance,
          _i2.VideoAdPlayerCallback callback,
        ) {},
        returnValueForMissingStub: (
          _i2.VideoAdPlayer pigeon_instance,
          _i2.VideoAdPlayerCallback callback,
        ) {},
      ) as void Function(
        _i2.VideoAdPlayer,
        _i2.VideoAdPlayerCallback,
      ));

  @override
  void Function(
    _i2.VideoAdPlayer,
    _i2.AdMediaInfo,
  ) get stopAd => (super.noSuchMethod(
        Invocation.getter(#stopAd),
        returnValue: (
          _i2.VideoAdPlayer pigeon_instance,
          _i2.AdMediaInfo adMediaInfo,
        ) {},
        returnValueForMissingStub: (
          _i2.VideoAdPlayer pigeon_instance,
          _i2.AdMediaInfo adMediaInfo,
        ) {},
      ) as void Function(
        _i2.VideoAdPlayer,
        _i2.AdMediaInfo,
      ));

  @override
  _i2.PigeonInstanceManager get pigeon_instanceManager => (super.noSuchMethod(
        Invocation.getter(#pigeon_instanceManager),
        returnValue: _FakePigeonInstanceManager_0(
          this,
          Invocation.getter(#pigeon_instanceManager),
        ),
        returnValueForMissingStub: _FakePigeonInstanceManager_0(
          this,
          Invocation.getter(#pigeon_instanceManager),
        ),
      ) as _i2.PigeonInstanceManager);

  @override
  _i6.Future<void> setVolume(int? value) => (super.noSuchMethod(
        Invocation.method(
          #setVolume,
          [value],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> setAdProgress(_i2.VideoProgressUpdate? progress) =>
      (super.noSuchMethod(
        Invocation.method(
          #setAdProgress,
          [progress],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i2.VideoAdPlayer pigeon_copy() => (super.noSuchMethod(
        Invocation.method(
          #pigeon_copy,
          [],
        ),
        returnValue: _FakeVideoAdPlayer_14(
          this,
          Invocation.method(
            #pigeon_copy,
            [],
          ),
        ),
        returnValueForMissingStub: _FakeVideoAdPlayer_14(
          this,
          Invocation.method(
            #pigeon_copy,
            [],
          ),
        ),
      ) as _i2.VideoAdPlayer);
}

/// A class which mocks [VideoAdPlayerCallback].
///
/// See the documentation for Mockito's code generation for more information.
class MockVideoAdPlayerCallback extends _i1.Mock
    implements _i2.VideoAdPlayerCallback {
  @override
  _i2.PigeonInstanceManager get pigeon_instanceManager => (super.noSuchMethod(
        Invocation.getter(#pigeon_instanceManager),
        returnValue: _FakePigeonInstanceManager_0(
          this,
          Invocation.getter(#pigeon_instanceManager),
        ),
        returnValueForMissingStub: _FakePigeonInstanceManager_0(
          this,
          Invocation.getter(#pigeon_instanceManager),
        ),
      ) as _i2.PigeonInstanceManager);

  @override
  _i6.Future<void> onAdProgress(
    _i2.AdMediaInfo? adMediaInfo,
    _i2.VideoProgressUpdate? videoProgressUpdate,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #onAdProgress,
          [
            adMediaInfo,
            videoProgressUpdate,
          ],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> onBuffering(_i2.AdMediaInfo? adMediaInfo) =>
      (super.noSuchMethod(
        Invocation.method(
          #onBuffering,
          [adMediaInfo],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> onContentComplete() => (super.noSuchMethod(
        Invocation.method(
          #onContentComplete,
          [],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> onEnded(_i2.AdMediaInfo? adMediaInfo) => (super.noSuchMethod(
        Invocation.method(
          #onEnded,
          [adMediaInfo],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> onError(_i2.AdMediaInfo? adMediaInfo) => (super.noSuchMethod(
        Invocation.method(
          #onError,
          [adMediaInfo],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> onLoaded(_i2.AdMediaInfo? adMediaInfo) =>
      (super.noSuchMethod(
        Invocation.method(
          #onLoaded,
          [adMediaInfo],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> onPause(_i2.AdMediaInfo? adMediaInfo) => (super.noSuchMethod(
        Invocation.method(
          #onPause,
          [adMediaInfo],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> onPlay(_i2.AdMediaInfo? adMediaInfo) => (super.noSuchMethod(
        Invocation.method(
          #onPlay,
          [adMediaInfo],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> onResume(_i2.AdMediaInfo? adMediaInfo) =>
      (super.noSuchMethod(
        Invocation.method(
          #onResume,
          [adMediaInfo],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> onVolumeChanged(
    _i2.AdMediaInfo? adMediaInfo,
    int? percentage,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #onVolumeChanged,
          [
            adMediaInfo,
            percentage,
          ],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i2.VideoAdPlayerCallback pigeon_copy() => (super.noSuchMethod(
        Invocation.method(
          #pigeon_copy,
          [],
        ),
        returnValue: _FakeVideoAdPlayerCallback_15(
          this,
          Invocation.method(
            #pigeon_copy,
            [],
          ),
        ),
        returnValueForMissingStub: _FakeVideoAdPlayerCallback_15(
          this,
          Invocation.method(
            #pigeon_copy,
            [],
          ),
        ),
      ) as _i2.VideoAdPlayerCallback);
}

/// A class which mocks [VideoView].
///
/// See the documentation for Mockito's code generation for more information.
class MockVideoView extends _i1.Mock implements _i2.VideoView {
  @override
  void Function(
    _i2.VideoView,
    _i2.MediaPlayer,
    int,
    int,
  ) get onError => (super.noSuchMethod(
        Invocation.getter(#onError),
        returnValue: (
          _i2.VideoView pigeon_instance,
          _i2.MediaPlayer player,
          int what,
          int extra,
        ) {},
        returnValueForMissingStub: (
          _i2.VideoView pigeon_instance,
          _i2.MediaPlayer player,
          int what,
          int extra,
        ) {},
      ) as void Function(
        _i2.VideoView,
        _i2.MediaPlayer,
        int,
        int,
      ));

  @override
  _i2.PigeonInstanceManager get pigeon_instanceManager => (super.noSuchMethod(
        Invocation.getter(#pigeon_instanceManager),
        returnValue: _FakePigeonInstanceManager_0(
          this,
          Invocation.getter(#pigeon_instanceManager),
        ),
        returnValueForMissingStub: _FakePigeonInstanceManager_0(
          this,
          Invocation.getter(#pigeon_instanceManager),
        ),
      ) as _i2.PigeonInstanceManager);

  @override
  _i6.Future<void> setVideoUri(String? uri) => (super.noSuchMethod(
        Invocation.method(
          #setVideoUri,
          [uri],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<int> getCurrentPosition() => (super.noSuchMethod(
        Invocation.method(
          #getCurrentPosition,
          [],
        ),
        returnValue: _i6.Future<int>.value(0),
        returnValueForMissingStub: _i6.Future<int>.value(0),
      ) as _i6.Future<int>);

  @override
  _i2.VideoView pigeon_copy() => (super.noSuchMethod(
        Invocation.method(
          #pigeon_copy,
          [],
        ),
        returnValue: _FakeVideoView_16(
          this,
          Invocation.method(
            #pigeon_copy,
            [],
          ),
        ),
        returnValueForMissingStub: _FakeVideoView_16(
          this,
          Invocation.method(
            #pigeon_copy,
            [],
          ),
        ),
      ) as _i2.VideoView);
}

/// A class which mocks [SurfaceAndroidViewController].
///
/// See the documentation for Mockito's code generation for more information.
class MockSurfaceAndroidViewController extends _i1.Mock
    implements _i4.SurfaceAndroidViewController {
  @override
  bool get requiresViewComposition => (super.noSuchMethod(
        Invocation.getter(#requiresViewComposition),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  int get viewId => (super.noSuchMethod(
        Invocation.getter(#viewId),
        returnValue: 0,
        returnValueForMissingStub: 0,
      ) as int);

  @override
  bool get awaitingCreation => (super.noSuchMethod(
        Invocation.getter(#awaitingCreation),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  _i4.PointTransformer get pointTransformer => (super.noSuchMethod(
        Invocation.getter(#pointTransformer),
        returnValue: (_i3.Offset position) => _FakeOffset_17(
          this,
          Invocation.getter(#pointTransformer),
        ),
        returnValueForMissingStub: (_i3.Offset position) => _FakeOffset_17(
          this,
          Invocation.getter(#pointTransformer),
        ),
      ) as _i4.PointTransformer);

  @override
  set pointTransformer(_i4.PointTransformer? transformer) => super.noSuchMethod(
        Invocation.setter(
          #pointTransformer,
          transformer,
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool get isCreated => (super.noSuchMethod(
        Invocation.getter(#isCreated),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  List<_i4.PlatformViewCreatedCallback> get createdCallbacks =>
      (super.noSuchMethod(
        Invocation.getter(#createdCallbacks),
        returnValue: <_i4.PlatformViewCreatedCallback>[],
        returnValueForMissingStub: <_i4.PlatformViewCreatedCallback>[],
      ) as List<_i4.PlatformViewCreatedCallback>);

  @override
  _i6.Future<void> setOffset(_i3.Offset? off) => (super.noSuchMethod(
        Invocation.method(
          #setOffset,
          [off],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> create({
    _i3.Size? size,
    _i3.Offset? position,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #create,
          [],
          {
            #size: size,
            #position: position,
          },
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<_i3.Size> setSize(_i3.Size? size) => (super.noSuchMethod(
        Invocation.method(
          #setSize,
          [size],
        ),
        returnValue: _i6.Future<_i3.Size>.value(_FakeSize_18(
          this,
          Invocation.method(
            #setSize,
            [size],
          ),
        )),
        returnValueForMissingStub: _i6.Future<_i3.Size>.value(_FakeSize_18(
          this,
          Invocation.method(
            #setSize,
            [size],
          ),
        )),
      ) as _i6.Future<_i3.Size>);

  @override
  _i6.Future<void> sendMotionEvent(_i4.AndroidMotionEvent? event) =>
      (super.noSuchMethod(
        Invocation.method(
          #sendMotionEvent,
          [event],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  void addOnPlatformViewCreatedListener(
          _i4.PlatformViewCreatedCallback? listener) =>
      super.noSuchMethod(
        Invocation.method(
          #addOnPlatformViewCreatedListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeOnPlatformViewCreatedListener(
          _i4.PlatformViewCreatedCallback? listener) =>
      super.noSuchMethod(
        Invocation.method(
          #removeOnPlatformViewCreatedListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i6.Future<void> setLayoutDirection(_i3.TextDirection? layoutDirection) =>
      (super.noSuchMethod(
        Invocation.method(
          #setLayoutDirection,
          [layoutDirection],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> dispatchPointerEvent(_i4.PointerEvent? event) =>
      (super.noSuchMethod(
        Invocation.method(
          #dispatchPointerEvent,
          [event],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> clearFocus() => (super.noSuchMethod(
        Invocation.method(
          #clearFocus,
          [],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> dispose() => (super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);
}

/// A class which mocks [PlatformViewsServiceProxy].
///
/// See the documentation for Mockito's code generation for more information.
// ignore: must_be_immutable
class MockPlatformViewsServiceProxy extends _i1.Mock
    implements _i7.PlatformViewsServiceProxy {
  @override
  _i4.ExpensiveAndroidViewController initExpensiveAndroidView({
    required int? id,
    required String? viewType,
    required _i3.TextDirection? layoutDirection,
    dynamic creationParams,
    _i4.MessageCodec<dynamic>? creationParamsCodec,
    _i3.VoidCallback? onFocus,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #initExpensiveAndroidView,
          [],
          {
            #id: id,
            #viewType: viewType,
            #layoutDirection: layoutDirection,
            #creationParams: creationParams,
            #creationParamsCodec: creationParamsCodec,
            #onFocus: onFocus,
          },
        ),
        returnValue: _FakeExpensiveAndroidViewController_19(
          this,
          Invocation.method(
            #initExpensiveAndroidView,
            [],
            {
              #id: id,
              #viewType: viewType,
              #layoutDirection: layoutDirection,
              #creationParams: creationParams,
              #creationParamsCodec: creationParamsCodec,
              #onFocus: onFocus,
            },
          ),
        ),
        returnValueForMissingStub: _FakeExpensiveAndroidViewController_19(
          this,
          Invocation.method(
            #initExpensiveAndroidView,
            [],
            {
              #id: id,
              #viewType: viewType,
              #layoutDirection: layoutDirection,
              #creationParams: creationParams,
              #creationParamsCodec: creationParamsCodec,
              #onFocus: onFocus,
            },
          ),
        ),
      ) as _i4.ExpensiveAndroidViewController);

  @override
  _i4.SurfaceAndroidViewController initSurfaceAndroidView({
    required int? id,
    required String? viewType,
    required _i3.TextDirection? layoutDirection,
    dynamic creationParams,
    _i4.MessageCodec<dynamic>? creationParamsCodec,
    _i3.VoidCallback? onFocus,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #initSurfaceAndroidView,
          [],
          {
            #id: id,
            #viewType: viewType,
            #layoutDirection: layoutDirection,
            #creationParams: creationParams,
            #creationParamsCodec: creationParamsCodec,
            #onFocus: onFocus,
          },
        ),
        returnValue: _FakeSurfaceAndroidViewController_20(
          this,
          Invocation.method(
            #initSurfaceAndroidView,
            [],
            {
              #id: id,
              #viewType: viewType,
              #layoutDirection: layoutDirection,
              #creationParams: creationParams,
              #creationParamsCodec: creationParamsCodec,
              #onFocus: onFocus,
            },
          ),
        ),
        returnValueForMissingStub: _FakeSurfaceAndroidViewController_20(
          this,
          Invocation.method(
            #initSurfaceAndroidView,
            [],
            {
              #id: id,
              #viewType: viewType,
              #layoutDirection: layoutDirection,
              #creationParams: creationParams,
              #creationParamsCodec: creationParamsCodec,
              #onFocus: onFocus,
            },
          ),
        ),
      ) as _i4.SurfaceAndroidViewController);
}
