// Mocks generated by Mockito 5.4.6 from annotations
// in interactive_media_ads/test/android/ima_settings_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:interactive_media_ads/src/android/interactive_media_ads.g.dart'
    as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakePigeonInstanceManager_0 extends _i1.SmartFake
    implements _i2.PigeonInstanceManager {
  _FakePigeonInstanceManager_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeCompanionAdSlot_1 extends _i1.SmartFake
    implements _i2.CompanionAdSlot {
  _FakeCompanionAdSlot_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeImaSdkSettings_2 extends _i1.SmartFake
    implements _i2.ImaSdkSettings {
  _FakeImaSdkSettings_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeAdsLoader_3 extends _i1.SmartFake implements _i2.AdsLoader {
  _FakeAdsLoader_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeAdsRequest_4 extends _i1.SmartFake implements _i2.AdsRequest {
  _FakeAdsRequest_4(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeAdsRenderingSettings_5 extends _i1.SmartFake
    implements _i2.AdsRenderingSettings {
  _FakeAdsRenderingSettings_5(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeImaSdkFactory_6 extends _i1.SmartFake implements _i2.ImaSdkFactory {
  _FakeImaSdkFactory_6(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [ImaSdkFactory].
///
/// See the documentation for Mockito's code generation for more information.
class MockImaSdkFactory extends _i1.Mock implements _i2.ImaSdkFactory {
  @override
  _i2.PigeonInstanceManager get pigeon_instanceManager => (super.noSuchMethod(
        Invocation.getter(#pigeon_instanceManager),
        returnValue: _FakePigeonInstanceManager_0(
          this,
          Invocation.getter(#pigeon_instanceManager),
        ),
        returnValueForMissingStub: _FakePigeonInstanceManager_0(
          this,
          Invocation.getter(#pigeon_instanceManager),
        ),
      ) as _i2.PigeonInstanceManager);

  @override
  _i3.Future<_i2.CompanionAdSlot> createCompanionAdSlot() =>
      (super.noSuchMethod(
        Invocation.method(
          #createCompanionAdSlot,
          [],
        ),
        returnValue:
            _i3.Future<_i2.CompanionAdSlot>.value(_FakeCompanionAdSlot_1(
          this,
          Invocation.method(
            #createCompanionAdSlot,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i3.Future<_i2.CompanionAdSlot>.value(_FakeCompanionAdSlot_1(
          this,
          Invocation.method(
            #createCompanionAdSlot,
            [],
          ),
        )),
      ) as _i3.Future<_i2.CompanionAdSlot>);

  @override
  _i3.Future<_i2.ImaSdkSettings> createImaSdkSettings() => (super.noSuchMethod(
        Invocation.method(
          #createImaSdkSettings,
          [],
        ),
        returnValue: _i3.Future<_i2.ImaSdkSettings>.value(_FakeImaSdkSettings_2(
          this,
          Invocation.method(
            #createImaSdkSettings,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i3.Future<_i2.ImaSdkSettings>.value(_FakeImaSdkSettings_2(
          this,
          Invocation.method(
            #createImaSdkSettings,
            [],
          ),
        )),
      ) as _i3.Future<_i2.ImaSdkSettings>);

  @override
  _i3.Future<_i2.AdsLoader> createAdsLoader(
    _i2.ImaSdkSettings? settings,
    _i2.AdDisplayContainer? container,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #createAdsLoader,
          [
            settings,
            container,
          ],
        ),
        returnValue: _i3.Future<_i2.AdsLoader>.value(_FakeAdsLoader_3(
          this,
          Invocation.method(
            #createAdsLoader,
            [
              settings,
              container,
            ],
          ),
        )),
        returnValueForMissingStub:
            _i3.Future<_i2.AdsLoader>.value(_FakeAdsLoader_3(
          this,
          Invocation.method(
            #createAdsLoader,
            [
              settings,
              container,
            ],
          ),
        )),
      ) as _i3.Future<_i2.AdsLoader>);

  @override
  _i3.Future<_i2.AdsRequest> createAdsRequest() => (super.noSuchMethod(
        Invocation.method(
          #createAdsRequest,
          [],
        ),
        returnValue: _i3.Future<_i2.AdsRequest>.value(_FakeAdsRequest_4(
          this,
          Invocation.method(
            #createAdsRequest,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i3.Future<_i2.AdsRequest>.value(_FakeAdsRequest_4(
          this,
          Invocation.method(
            #createAdsRequest,
            [],
          ),
        )),
      ) as _i3.Future<_i2.AdsRequest>);

  @override
  _i3.Future<_i2.AdsRenderingSettings> createAdsRenderingSettings() =>
      (super.noSuchMethod(
        Invocation.method(
          #createAdsRenderingSettings,
          [],
        ),
        returnValue: _i3.Future<_i2.AdsRenderingSettings>.value(
            _FakeAdsRenderingSettings_5(
          this,
          Invocation.method(
            #createAdsRenderingSettings,
            [],
          ),
        )),
        returnValueForMissingStub: _i3.Future<_i2.AdsRenderingSettings>.value(
            _FakeAdsRenderingSettings_5(
          this,
          Invocation.method(
            #createAdsRenderingSettings,
            [],
          ),
        )),
      ) as _i3.Future<_i2.AdsRenderingSettings>);

  @override
  _i2.ImaSdkFactory pigeon_copy() => (super.noSuchMethod(
        Invocation.method(
          #pigeon_copy,
          [],
        ),
        returnValue: _FakeImaSdkFactory_6(
          this,
          Invocation.method(
            #pigeon_copy,
            [],
          ),
        ),
        returnValueForMissingStub: _FakeImaSdkFactory_6(
          this,
          Invocation.method(
            #pigeon_copy,
            [],
          ),
        ),
      ) as _i2.ImaSdkFactory);
}

/// A class which mocks [ImaSdkSettings].
///
/// See the documentation for Mockito's code generation for more information.
class MockImaSdkSettings extends _i1.Mock implements _i2.ImaSdkSettings {
  @override
  _i2.PigeonInstanceManager get pigeon_instanceManager => (super.noSuchMethod(
        Invocation.getter(#pigeon_instanceManager),
        returnValue: _FakePigeonInstanceManager_0(
          this,
          Invocation.getter(#pigeon_instanceManager),
        ),
        returnValueForMissingStub: _FakePigeonInstanceManager_0(
          this,
          Invocation.getter(#pigeon_instanceManager),
        ),
      ) as _i2.PigeonInstanceManager);

  @override
  _i3.Future<void> setAutoPlayAdBreaks(bool? autoPlayAdBreaks) =>
      (super.noSuchMethod(
        Invocation.method(
          #setAutoPlayAdBreaks,
          [autoPlayAdBreaks],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> setDebugMode(bool? debugMode) => (super.noSuchMethod(
        Invocation.method(
          #setDebugMode,
          [debugMode],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> setFeatureFlags(Map<String, String>? featureFlags) =>
      (super.noSuchMethod(
        Invocation.method(
          #setFeatureFlags,
          [featureFlags],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> setLanguage(String? language) => (super.noSuchMethod(
        Invocation.method(
          #setLanguage,
          [language],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> setMaxRedirects(int? maxRedirects) => (super.noSuchMethod(
        Invocation.method(
          #setMaxRedirects,
          [maxRedirects],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> setPlayerType(String? playerType) => (super.noSuchMethod(
        Invocation.method(
          #setPlayerType,
          [playerType],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> setPlayerVersion(String? playerVersion) =>
      (super.noSuchMethod(
        Invocation.method(
          #setPlayerVersion,
          [playerVersion],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> setPpid(String? ppid) => (super.noSuchMethod(
        Invocation.method(
          #setPpid,
          [ppid],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> setSessionId(String? sessionId) => (super.noSuchMethod(
        Invocation.method(
          #setSessionId,
          [sessionId],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i2.ImaSdkSettings pigeon_copy() => (super.noSuchMethod(
        Invocation.method(
          #pigeon_copy,
          [],
        ),
        returnValue: _FakeImaSdkSettings_2(
          this,
          Invocation.method(
            #pigeon_copy,
            [],
          ),
        ),
        returnValueForMissingStub: _FakeImaSdkSettings_2(
          this,
          Invocation.method(
            #pigeon_copy,
            [],
          ),
        ),
      ) as _i2.ImaSdkSettings);
}
