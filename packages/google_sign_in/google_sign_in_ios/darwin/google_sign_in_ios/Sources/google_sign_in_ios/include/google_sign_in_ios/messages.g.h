// Copyright 2013 The Flutter Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
// Autogenerated from Pigeon (v22.7.4), do not edit directly.
// See also: https://pub.dev/packages/pigeon

#import <Foundation/Foundation.h>

@protocol FlutterBinaryMessenger;
@protocol FlutterMessageCodec;
@class FlutterError;
@class FlutterStandardTypedData;

NS_ASSUME_NONNULL_BEGIN

/// Enum mapping of known codes from
/// https://developers.google.com/identity/sign-in/ios/reference/Enums/GIDSignInErrorCode
typedef NS_ENUM(NSUInteger, FSIGoogleSignInErrorCode) {
  /// Either the underlying kGIDSignInErrorCodeUnknown, or a code that isn't
  /// a known code mapped to a value below.
  FSIGoogleSignInErrorCodeUnknown = 0,
  /// kGIDSignInErrorCodeKeychain; an error reading or writing to keychain.
  FSIGoogleSignInErrorCodeKeychainError = 1,
  /// kGIDSignInErrorCodeHasNoAuthInKeychain; no auth present in the keychain.
  ///
  /// For restorePreviousSignIn, this indicates that there is no sign in to
  /// restore.
  FSIGoogleSignInErrorCodeNoAuthInKeychain = 2,
  /// kGIDSignInErrorCodeCanceled; the request was canceled by the user.
  FSIGoogleSignInErrorCodeCanceled = 3,
  /// kGIDSignInErrorCodeEMM; an enterprise management error occurred.
  FSIGoogleSignInErrorCodeEemError = 4,
  /// kGIDSignInErrorCodeScopesAlreadyGranted; the requested scopes have already
  /// been granted.
  FSIGoogleSignInErrorCodeScopesAlreadyGranted = 5,
  /// kGIDSignInErrorCodeMismatchWithCurrentUser; an operation was requested on
  /// a non-current user.
  FSIGoogleSignInErrorCodeUserMismatch = 6,
};

/// Wrapper for FSIGoogleSignInErrorCode to allow for nullability.
@interface FSIGoogleSignInErrorCodeBox : NSObject
@property(nonatomic, assign) FSIGoogleSignInErrorCode value;
- (instancetype)initWithValue:(FSIGoogleSignInErrorCode)value;
@end

@class FSIPlatformConfigurationParams;
@class FSIUserData;
@class FSISignInResult;
@class FSISignInFailure;
@class FSISignInSuccess;

@interface FSIPlatformConfigurationParams : NSObject
+ (instancetype)makeWithClientId:(nullable NSString *)clientId
                  serverClientId:(nullable NSString *)serverClientId
                    hostedDomain:(nullable NSString *)hostedDomain;
@property(nonatomic, copy, nullable) NSString *clientId;
@property(nonatomic, copy, nullable) NSString *serverClientId;
@property(nonatomic, copy, nullable) NSString *hostedDomain;
@end

/// Pigeon version of GoogleSignInUserData + AuthenticationTokenData.
///
/// See GoogleSignInUserData and AuthenticationTokenData for details.
@interface FSIUserData : NSObject
/// `init` unavailable to enforce nonnull fields, see the `make` class method.
- (instancetype)init NS_UNAVAILABLE;
+ (instancetype)makeWithDisplayName:(nullable NSString *)displayName
                              email:(NSString *)email
                             userId:(NSString *)userId
                           photoUrl:(nullable NSString *)photoUrl
                            idToken:(nullable NSString *)idToken;
@property(nonatomic, copy, nullable) NSString *displayName;
@property(nonatomic, copy) NSString *email;
@property(nonatomic, copy) NSString *userId;
@property(nonatomic, copy, nullable) NSString *photoUrl;
@property(nonatomic, copy, nullable) NSString *idToken;
@end

/// The response from an auth call.
@interface FSISignInResult : NSObject
+ (instancetype)makeWithSuccess:(nullable FSISignInSuccess *)success
                          error:(nullable FSISignInFailure *)error;
/// The success result, if any.
///
/// Exactly one of success and error will be non-nil.
@property(nonatomic, strong, nullable) FSISignInSuccess *success;
/// The error result, if any.
///
/// Exactly one of success and error will be non-nil.
@property(nonatomic, strong, nullable) FSISignInFailure *error;
@end

/// An sign in failure.
@interface FSISignInFailure : NSObject
/// `init` unavailable to enforce nonnull fields, see the `make` class method.
- (instancetype)init NS_UNAVAILABLE;
+ (instancetype)makeWithType:(FSIGoogleSignInErrorCode)type
                     message:(nullable NSString *)message
                     details:(nullable id)details;
/// The type of failure.
@property(nonatomic, assign) FSIGoogleSignInErrorCode type;
/// The message associated with the failure, if any.
@property(nonatomic, copy, nullable) NSString *message;
/// Extra details about the failure, if any.
@property(nonatomic, strong, nullable) id details;
@end

/// A successful auth result.
///
/// Corresponds to the information in a native GIDSignInResult. Because of the
/// structure of the Google Sign In SDK, this has information corresponding to
/// both authn and authz steps, even though incremental authorization is
/// supported.
@interface FSISignInSuccess : NSObject
/// `init` unavailable to enforce nonnull fields, see the `make` class method.
- (instancetype)init NS_UNAVAILABLE;
+ (instancetype)makeWithUser:(FSIUserData *)user
                 accessToken:(NSString *)accessToken
               grantedScopes:(NSArray<NSString *> *)grantedScopes
              serverAuthCode:(nullable NSString *)serverAuthCode;
@property(nonatomic, strong) FSIUserData *user;
@property(nonatomic, copy) NSString *accessToken;
@property(nonatomic, copy) NSArray<NSString *> *grantedScopes;
@property(nonatomic, copy, nullable) NSString *serverAuthCode;
@end

/// The codec used by all APIs.
NSObject<FlutterMessageCodec> *FSIGetMessagesCodec(void);

@protocol FSIGoogleSignInApi
/// Configures the sign in object with application-level parameters.
- (void)configureWithParameters:(FSIPlatformConfigurationParams *)params
                          error:(FlutterError *_Nullable *_Nonnull)error;
/// Attempts to restore an existing sign-in, if any, with minimal user
/// interaction.
- (void)restorePreviousSignInWithCompletion:(void (^)(FSISignInResult *_Nullable,
                                                      FlutterError *_Nullable))completion;
/// Starts a sign in with user interaction.
- (void)signInWithScopeHint:(NSArray<NSString *> *)scopeHint
                      nonce:(nullable NSString *)nonce
                 completion:
                     (void (^)(FSISignInResult *_Nullable, FlutterError *_Nullable))completion;
/// Requests the access token for the current sign in.
- (void)refreshedAuthorizationTokensForUser:(NSString *)userId
                                 completion:(void (^)(FSISignInResult *_Nullable,
                                                      FlutterError *_Nullable))completion;
/// Requests authorization of the given additional scopes.
- (void)addScopes:(NSArray<NSString *> *)scopes
          forUser:(NSString *)userId
       completion:(void (^)(FSISignInResult *_Nullable, FlutterError *_Nullable))completion;
/// Signs out the current user.
- (void)signOutWithError:(FlutterError *_Nullable *_Nonnull)error;
/// Revokes scope grants to the application.
- (void)disconnectWithCompletion:(void (^)(FlutterError *_Nullable))completion;
@end

extern void SetUpFSIGoogleSignInApi(id<FlutterBinaryMessenger> binaryMessenger,
                                    NSObject<FSIGoogleSignInApi> *_Nullable api);

extern void SetUpFSIGoogleSignInApiWithSuffix(id<FlutterBinaryMessenger> binaryMessenger,
                                              NSObject<FSIGoogleSignInApi> *_Nullable api,
                                              NSString *messageChannelSuffix);

NS_ASSUME_NONNULL_END
