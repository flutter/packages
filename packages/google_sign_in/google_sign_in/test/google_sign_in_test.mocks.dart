// Mocks generated by Mockito 5.4.5 from annotations
// in google_sign_in/test/google_sign_in_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:google_sign_in_platform_interface/google_sign_in_platform_interface.dart'
    as _i3;
import 'package:google_sign_in_platform_interface/src/types.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeAuthenticationResults_0 extends _i1.SmartFake
    implements _i2.AuthenticationResults {
  _FakeAuthenticationResults_0(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

/// A class which mocks [GoogleSignInPlatform].
///
/// See the documentation for Mockito's code generation for more information.
class MockGoogleSignInPlatform extends _i1.Mock
    implements _i3.GoogleSignInPlatform {
  MockGoogleSignInPlatform() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<void> init(_i2.InitParameters? params) => (super.noSuchMethod(
        Invocation.method(#init, [params]),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<_i2.AuthenticationResults?>? attemptLightweightAuthentication(
    _i2.AttemptLightweightAuthenticationParameters? params,
  ) =>
      (super.noSuchMethod(
        Invocation.method(#attemptLightweightAuthentication, [params]),
      ) as _i4.Future<_i2.AuthenticationResults?>?);

  @override
  _i4.Future<_i2.AuthenticationResults> authenticate(
    _i2.AuthenticateParameters? params,
  ) =>
      (super.noSuchMethod(
        Invocation.method(#authenticate, [params]),
        returnValue: _i4.Future<_i2.AuthenticationResults>.value(
          _FakeAuthenticationResults_0(
            this,
            Invocation.method(#authenticate, [params]),
          ),
        ),
      ) as _i4.Future<_i2.AuthenticationResults>);

  @override
  bool supportsAuthenticate() => (super.noSuchMethod(
        Invocation.method(#supportsAuthenticate, []),
        returnValue: false,
      ) as bool);

  @override
  bool authorizationRequiresUserInteraction() => (super.noSuchMethod(
        Invocation.method(#authorizationRequiresUserInteraction, []),
        returnValue: false,
      ) as bool);

  @override
  _i4.Future<_i2.ClientAuthorizationTokenData?>
      clientAuthorizationTokensForScopes(
    _i2.ClientAuthorizationTokensForScopesParameters? params,
  ) =>
          (super.noSuchMethod(
            Invocation.method(#clientAuthorizationTokensForScopes, [params]),
            returnValue: _i4.Future<_i2.ClientAuthorizationTokenData?>.value(),
          ) as _i4.Future<_i2.ClientAuthorizationTokenData?>);

  @override
  _i4.Future<_i2.ServerAuthorizationTokenData?>
      serverAuthorizationTokensForScopes(
    _i2.ServerAuthorizationTokensForScopesParameters? params,
  ) =>
          (super.noSuchMethod(
            Invocation.method(#serverAuthorizationTokensForScopes, [params]),
            returnValue: _i4.Future<_i2.ServerAuthorizationTokenData?>.value(),
          ) as _i4.Future<_i2.ServerAuthorizationTokenData?>);

  @override
  _i4.Future<void> signOut(_i2.SignOutParams? params) => (super.noSuchMethod(
        Invocation.method(#signOut, [params]),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> disconnect(_i2.DisconnectParams? params) =>
      (super.noSuchMethod(
        Invocation.method(#disconnect, [params]),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);
}
