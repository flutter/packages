// Mocks generated by Mockito 5.4.4 from annotations
// in camera_android_camerax/test/camera2_camera_control_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:camera_android_camerax/src/camera_control.dart' as _i2;
import 'package:camera_android_camerax/src/camerax_library.g.dart' as _i7;
import 'package:camera_android_camerax/src/capture_request_options.dart' as _i6;
import 'package:camera_android_camerax/src/focus_metering_action.dart' as _i5;
import 'package:camera_android_camerax/src/focus_metering_result.dart' as _i4;
import 'package:mockito/mockito.dart' as _i1;

import 'test_camerax_library.g.dart' as _i8;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [CameraControl].
///
/// See the documentation for Mockito's code generation for more information.
// ignore: must_be_immutable
class MockCameraControl extends _i1.Mock implements _i2.CameraControl {
  MockCameraControl() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<void> enableTorch(bool? torch) => (super.noSuchMethod(
        Invocation.method(
          #enableTorch,
          [torch],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> setZoomRatio(double? ratio) => (super.noSuchMethod(
        Invocation.method(
          #setZoomRatio,
          [ratio],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<_i4.FocusMeteringResult?> startFocusAndMetering(
          _i5.FocusMeteringAction? action) =>
      (super.noSuchMethod(
        Invocation.method(
          #startFocusAndMetering,
          [action],
        ),
        returnValue: _i3.Future<_i4.FocusMeteringResult?>.value(),
      ) as _i3.Future<_i4.FocusMeteringResult?>);

  @override
  _i3.Future<void> cancelFocusAndMetering() => (super.noSuchMethod(
        Invocation.method(
          #cancelFocusAndMetering,
          [],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<int?> setExposureCompensationIndex(int? index) =>
      (super.noSuchMethod(
        Invocation.method(
          #setExposureCompensationIndex,
          [index],
        ),
        returnValue: _i3.Future<int?>.value(),
      ) as _i3.Future<int?>);
}

/// A class which mocks [CaptureRequestOptions].
///
/// See the documentation for Mockito's code generation for more information.
// ignore: must_be_immutable
class MockCaptureRequestOptions extends _i1.Mock
    implements _i6.CaptureRequestOptions {
  MockCaptureRequestOptions() {
    _i1.throwOnMissingStub(this);
  }

  @override
  List<(_i7.CaptureRequestKeySupportedType, Object?)> get requestedOptions =>
      (super.noSuchMethod(
        Invocation.getter(#requestedOptions),
        returnValue: <(_i7.CaptureRequestKeySupportedType, Object?)>[],
      ) as List<(_i7.CaptureRequestKeySupportedType, Object?)>);
}

/// A class which mocks [TestCamera2CameraControlHostApi].
///
/// See the documentation for Mockito's code generation for more information.
class MockTestCamera2CameraControlHostApi extends _i1.Mock
    implements _i8.TestCamera2CameraControlHostApi {
  MockTestCamera2CameraControlHostApi() {
    _i1.throwOnMissingStub(this);
  }

  @override
  void create(
    int? identifier,
    int? cameraControlIdentifier,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #create,
          [
            identifier,
            cameraControlIdentifier,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i3.Future<void> addCaptureRequestOptions(
    int? identifier,
    int? captureRequestOptionsIdentifier,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #addCaptureRequestOptions,
          [
            identifier,
            captureRequestOptionsIdentifier,
          ],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);
}

/// A class which mocks [TestInstanceManagerHostApi].
///
/// See the documentation for Mockito's code generation for more information.
class MockTestInstanceManagerHostApi extends _i1.Mock
    implements _i8.TestInstanceManagerHostApi {
  MockTestInstanceManagerHostApi() {
    _i1.throwOnMissingStub(this);
  }

  @override
  void clear() => super.noSuchMethod(
        Invocation.method(
          #clear,
          [],
        ),
        returnValueForMissingStub: null,
      );
}
