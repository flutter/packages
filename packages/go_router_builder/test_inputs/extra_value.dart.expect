RouteBase get $extraValueRoute => GoRouteData.$route(
      path: '/default-value-route',
      factory: _$ExtraValueRoute._fromState,
    );

mixin _$ExtraValueRoute on GoRouteData {
  static ExtraValueRoute _fromState(GoRouterState state) => ExtraValueRoute(
        param:
            _$convertMapValue('param', state.uri.queryParameters, int.parse) ??
                0,
        $extra: state.extra as int?,
      );

  ExtraValueRoute get _self => this as ExtraValueRoute;

  @override
  String get location => GoRouteData.$location(
        '/default-value-route',
        queryParams: {
          if (_self.param != 0) 'param': _self.param.toString(),
        },
      );

  @override
  void go(BuildContext context) => context.go(location, extra: _self.$extra);

  @override
  Future<T?> push<T>(BuildContext context) =>
      context.push<T>(location, extra: _self.$extra);

  @override
  void pushReplacement(BuildContext context) =>
      context.pushReplacement(location, extra: _self.$extra);

  @override
  void replace(BuildContext context) =>
      context.replace(location, extra: _self.$extra);
}

T? _$convertMapValue<T>(
  String key,
  Map<String, String> map,
  T? Function(String) converter,
) {
  final value = map[key];
  return value == null ? null : converter(value);
}
