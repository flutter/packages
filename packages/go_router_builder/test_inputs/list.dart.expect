RouteBase get $listRoute => GoRouteData.$route(
      path: '/list-route',
      factory: $ListRouteExtension._fromState,
    );

extension $ListRouteExtension on ListRoute {
  static ListRoute _fromState(GoRouterState state) => ListRoute(
        ids: state.uri.queryParametersAll['ids']?.map(int.parse).toList() ??
            const [],
        nullableIds: state.uri.queryParametersAll['nullable-ids']
            ?.map(int.parse)
            .toList(),
        idsWithDefaultValue: state
                .uri.queryParametersAll['ids-with-default-value']
                ?.map(int.parse)
                .toList() ??
            const <int>[0],
      );

  String get location => GoRouteData.$location(
        '/list-route',
        queryParams: {
          'ids': ids.map((e) => e.toString()).toList(),
          if (nullableIds != null)
            'nullable-ids': nullableIds?.map((e) => e.toString()).toList(),
          if (idsWithDefaultValue != const <int>[0])
            'ids-with-default-value':
                idsWithDefaultValue.map((e) => e.toString()).toList(),
        },
      );

  void go(BuildContext context) => context.go(location);

  Future<T?> push<T>(BuildContext context) => context.push<T>(location);

  void pushReplacement(BuildContext context) =>
      context.pushReplacement(location);

  void replace(BuildContext context) => context.replace(location);
}